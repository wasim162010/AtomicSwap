{
  "contractName": "SwapERC20ToERC20",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "_swapID",
          "type": "bytes32"
        }
      ],
      "name": "Close",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "_swapID",
          "type": "bytes32"
        }
      ],
      "name": "Expire",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "_swapID",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "_closeTrader",
          "type": "address"
        }
      ],
      "name": "Open",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "_swapID",
          "type": "bytes32"
        },
        {
          "internalType": "uint256",
          "name": "_openValue",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_openContractAddress",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_closeValue",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_closeTrader",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_closeContractAddress",
          "type": "address"
        }
      ],
      "name": "open",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "_swapID",
          "type": "bytes32"
        }
      ],
      "name": "close",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "_swapID",
          "type": "bytes32"
        }
      ],
      "name": "expire",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "_swapID",
          "type": "bytes32"
        }
      ],
      "name": "check",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "openValue",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "openContractAddress",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "closeValue",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "closeTrader",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "closeContractAddress",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"_swapID\",\"type\":\"bytes32\"}],\"name\":\"Close\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"_swapID\",\"type\":\"bytes32\"}],\"name\":\"Expire\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"_swapID\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_closeTrader\",\"type\":\"address\"}],\"name\":\"Open\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_swapID\",\"type\":\"bytes32\"}],\"name\":\"check\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"openValue\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"openContractAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"closeValue\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"closeTrader\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"closeContractAddress\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_swapID\",\"type\":\"bytes32\"}],\"name\":\"close\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_swapID\",\"type\":\"bytes32\"}],\"name\":\"expire\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_swapID\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"_openValue\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_openContractAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_closeValue\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_closeTrader\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_closeContractAddress\",\"type\":\"address\"}],\"name\":\"open\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"project:/contracts/SwapERC20ToERC20.sol\":\"SwapERC20ToERC20\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"project:/contracts/ERC20.sol\":{\"keccak256\":\"0x662e6c6428fbc170e0c9ded4f28fe94675537ce6a2af2d4af7337c8f624f21be\",\"urls\":[\"bzz-raw://8806feecd01cf711a5346ddff7f2f7b11e43d7e49205989f7cdf019628f2587d\",\"dweb:/ipfs/QmeSRY143NH5ZDnyRf2VNh1qQziMdmZaYXCe8hdh8FqxWG\"]},\"project:/contracts/SwapERC20ToERC20.sol\":{\"keccak256\":\"0x13443809e68edbdba04953484e9a1b22eaf71b2431f4f9d0404339147f3ac58a\",\"urls\":[\"bzz-raw://b7b4a60ff81273c1d6a3eaaeea38c45c6dfa17d4aeb2bfd544ea158f175f43cd\",\"dweb:/ipfs/QmPvFJxnC4MdXcgj1xAhdLiakwJq1wA8U1UaEHQyxczPyW\"]}},\"version\":1}",
  "bytecode": "",
  "deployedBytecode": "",
  "immutableReferences": {},
  "generatedSources": [],
  "deployedGeneratedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:7084:4",
        "statements": [
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "47:35:4",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "57:19:4",
                  "value": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "73:2:4",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "67:5:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "67:9:4"
                  },
                  "variableNames": [
                    {
                      "name": "memPtr",
                      "nodeType": "YulIdentifier",
                      "src": "57:6:4"
                    }
                  ]
                }
              ]
            },
            "name": "allocate_unbounded",
            "nodeType": "YulFunctionDefinition",
            "returnVariables": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "40:6:4",
                "type": ""
              }
            ],
            "src": "7:75:4"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "177:28:4",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "194:1:4",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "197:1:4",
                        "type": "",
                        "value": "0"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "187:6:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "187:12:4"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "187:12:4"
                }
              ]
            },
            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
            "nodeType": "YulFunctionDefinition",
            "src": "88:117:4"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "300:28:4",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "317:1:4",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "320:1:4",
                        "type": "",
                        "value": "0"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "310:6:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "310:12:4"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "310:12:4"
                }
              ]
            },
            "name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
            "nodeType": "YulFunctionDefinition",
            "src": "211:117:4"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "379:32:4",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "389:16:4",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "400:5:4"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "389:7:4"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_bytes32",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "361:5:4",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "371:7:4",
                "type": ""
              }
            ],
            "src": "334:77:4"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "460:79:4",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "517:16:4",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "526:1:4",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "529:1:4",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "519:6:4"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "519:12:4"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "519:12:4"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "483:5:4"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "508:5:4"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_bytes32",
                              "nodeType": "YulIdentifier",
                              "src": "490:17:4"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "490:24:4"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "480:2:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "480:35:4"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "473:6:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "473:43:4"
                  },
                  "nodeType": "YulIf",
                  "src": "470:63:4"
                }
              ]
            },
            "name": "validator_revert_t_bytes32",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "453:5:4",
                "type": ""
              }
            ],
            "src": "417:122:4"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "597:87:4",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "607:29:4",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "629:6:4"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "616:12:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "616:20:4"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "607:5:4"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "672:5:4"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_bytes32",
                      "nodeType": "YulIdentifier",
                      "src": "645:26:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "645:33:4"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "645:33:4"
                }
              ]
            },
            "name": "abi_decode_t_bytes32",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "575:6:4",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "583:3:4",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "591:5:4",
                "type": ""
              }
            ],
            "src": "545:139:4"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "756:263:4",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "802:83:4",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                            "nodeType": "YulIdentifier",
                            "src": "804:77:4"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "804:79:4"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "804:79:4"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "777:7:4"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "786:9:4"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "773:3:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "773:23:4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "798:2:4",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "769:3:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "769:32:4"
                  },
                  "nodeType": "YulIf",
                  "src": "766:119:4"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "895:117:4",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "910:15:4",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "924:1:4",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "914:6:4",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "939:63:4",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "974:9:4"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "985:6:4"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "970:3:4"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "970:22:4"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "994:7:4"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_bytes32",
                          "nodeType": "YulIdentifier",
                          "src": "949:20:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "949:53:4"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "939:6:4"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_bytes32",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "726:9:4",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "737:7:4",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "749:6:4",
                "type": ""
              }
            ],
            "src": "690:329:4"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1070:32:4",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1080:16:4",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "1091:5:4"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "1080:7:4"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1052:5:4",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "1062:7:4",
                "type": ""
              }
            ],
            "src": "1025:77:4"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1173:53:4",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "1190:3:4"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "1213:5:4"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "1195:17:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1195:24:4"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1183:6:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1183:37:4"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1183:37:4"
                }
              ]
            },
            "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1161:5:4",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "1168:3:4",
                "type": ""
              }
            ],
            "src": "1108:118:4"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1277:81:4",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1287:65:4",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "1302:5:4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1309:42:4",
                        "type": "",
                        "value": "0xffffffffffffffffffffffffffffffffffffffff"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "1298:3:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1298:54:4"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "1287:7:4"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_uint160",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1259:5:4",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "1269:7:4",
                "type": ""
              }
            ],
            "src": "1232:126:4"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1409:51:4",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1419:35:4",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "1448:5:4"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint160",
                      "nodeType": "YulIdentifier",
                      "src": "1430:17:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1430:24:4"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "1419:7:4"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1391:5:4",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "1401:7:4",
                "type": ""
              }
            ],
            "src": "1364:96:4"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1531:53:4",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "1548:3:4"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "1571:5:4"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "1553:17:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1553:24:4"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1541:6:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1541:37:4"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1541:37:4"
                }
              ]
            },
            "name": "abi_encode_t_address_to_t_address_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1519:5:4",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "1526:3:4",
                "type": ""
              }
            ],
            "src": "1466:118:4"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1800:454:4",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1810:27:4",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1822:9:4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1833:3:4",
                        "type": "",
                        "value": "160"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1818:3:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1818:19:4"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "1810:4:4"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "1891:6:4"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1904:9:4"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1915:1:4",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1900:3:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1900:17:4"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "1847:43:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1847:71:4"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1847:71:4"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "1972:6:4"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1985:9:4"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1996:2:4",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1981:3:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1981:18:4"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "1928:43:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1928:72:4"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1928:72:4"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value2",
                        "nodeType": "YulIdentifier",
                        "src": "2054:6:4"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2067:9:4"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2078:2:4",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2063:3:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2063:18:4"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "2010:43:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2010:72:4"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2010:72:4"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value3",
                        "nodeType": "YulIdentifier",
                        "src": "2136:6:4"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2149:9:4"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2160:2:4",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2145:3:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2145:18:4"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "2092:43:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2092:72:4"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2092:72:4"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value4",
                        "nodeType": "YulIdentifier",
                        "src": "2218:6:4"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2231:9:4"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2242:3:4",
                            "type": "",
                            "value": "128"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2227:3:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2227:19:4"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "2174:43:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2174:73:4"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2174:73:4"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint256_t_address_t_uint256_t_address_t_address__to_t_uint256_t_address_t_uint256_t_address_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1740:9:4",
                "type": ""
              },
              {
                "name": "value4",
                "nodeType": "YulTypedName",
                "src": "1752:6:4",
                "type": ""
              },
              {
                "name": "value3",
                "nodeType": "YulTypedName",
                "src": "1760:6:4",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "1768:6:4",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "1776:6:4",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1784:6:4",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "1795:4:4",
                "type": ""
              }
            ],
            "src": "1590:664:4"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2303:79:4",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2360:16:4",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2369:1:4",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2372:1:4",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "2362:6:4"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2362:12:4"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2362:12:4"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "2326:5:4"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "2351:5:4"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_uint256",
                              "nodeType": "YulIdentifier",
                              "src": "2333:17:4"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2333:24:4"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "2323:2:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2323:35:4"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "2316:6:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2316:43:4"
                  },
                  "nodeType": "YulIf",
                  "src": "2313:63:4"
                }
              ]
            },
            "name": "validator_revert_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "2296:5:4",
                "type": ""
              }
            ],
            "src": "2260:122:4"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2440:87:4",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2450:29:4",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "2472:6:4"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "2459:12:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2459:20:4"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "2450:5:4"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "2515:5:4"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "2488:26:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2488:33:4"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2488:33:4"
                }
              ]
            },
            "name": "abi_decode_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "2418:6:4",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "2426:3:4",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "2434:5:4",
                "type": ""
              }
            ],
            "src": "2388:139:4"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2576:79:4",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2633:16:4",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2642:1:4",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2645:1:4",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "2635:6:4"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2635:12:4"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2635:12:4"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "2599:5:4"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "2624:5:4"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_address",
                              "nodeType": "YulIdentifier",
                              "src": "2606:17:4"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2606:24:4"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "2596:2:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2596:35:4"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "2589:6:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2589:43:4"
                  },
                  "nodeType": "YulIf",
                  "src": "2586:63:4"
                }
              ]
            },
            "name": "validator_revert_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "2569:5:4",
                "type": ""
              }
            ],
            "src": "2533:122:4"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2713:87:4",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2723:29:4",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "2745:6:4"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "2732:12:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2732:20:4"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "2723:5:4"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "2788:5:4"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "2761:26:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2761:33:4"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2761:33:4"
                }
              ]
            },
            "name": "abi_decode_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "2691:6:4",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "2699:3:4",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "2707:5:4",
                "type": ""
              }
            ],
            "src": "2661:139:4"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2957:906:4",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "3004:83:4",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                            "nodeType": "YulIdentifier",
                            "src": "3006:77:4"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3006:79:4"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3006:79:4"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2978:7:4"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2987:9:4"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "2974:3:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2974:23:4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2999:3:4",
                        "type": "",
                        "value": "192"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "2970:3:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2970:33:4"
                  },
                  "nodeType": "YulIf",
                  "src": "2967:120:4"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "3097:117:4",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "3112:15:4",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3126:1:4",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "3116:6:4",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "3141:63:4",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "3176:9:4"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "3187:6:4"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "3172:3:4"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3172:22:4"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "3196:7:4"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_bytes32",
                          "nodeType": "YulIdentifier",
                          "src": "3151:20:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3151:53:4"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "3141:6:4"
                        }
                      ]
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "3224:118:4",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "3239:16:4",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3253:2:4",
                        "type": "",
                        "value": "32"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "3243:6:4",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "3269:63:4",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "3304:9:4"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "3315:6:4"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "3300:3:4"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3300:22:4"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "3324:7:4"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "3279:20:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3279:53:4"
                      },
                      "variableNames": [
                        {
                          "name": "value1",
                          "nodeType": "YulIdentifier",
                          "src": "3269:6:4"
                        }
                      ]
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "3352:118:4",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "3367:16:4",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3381:2:4",
                        "type": "",
                        "value": "64"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "3371:6:4",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "3397:63:4",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "3432:9:4"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "3443:6:4"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "3428:3:4"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3428:22:4"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "3452:7:4"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "3407:20:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3407:53:4"
                      },
                      "variableNames": [
                        {
                          "name": "value2",
                          "nodeType": "YulIdentifier",
                          "src": "3397:6:4"
                        }
                      ]
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "3480:118:4",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "3495:16:4",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3509:2:4",
                        "type": "",
                        "value": "96"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "3499:6:4",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "3525:63:4",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "3560:9:4"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "3571:6:4"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "3556:3:4"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3556:22:4"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "3580:7:4"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "3535:20:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3535:53:4"
                      },
                      "variableNames": [
                        {
                          "name": "value3",
                          "nodeType": "YulIdentifier",
                          "src": "3525:6:4"
                        }
                      ]
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "3608:119:4",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "3623:17:4",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3637:3:4",
                        "type": "",
                        "value": "128"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "3627:6:4",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "3654:63:4",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "3689:9:4"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "3700:6:4"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "3685:3:4"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3685:22:4"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "3709:7:4"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "3664:20:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3664:53:4"
                      },
                      "variableNames": [
                        {
                          "name": "value4",
                          "nodeType": "YulIdentifier",
                          "src": "3654:6:4"
                        }
                      ]
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "3737:119:4",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "3752:17:4",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3766:3:4",
                        "type": "",
                        "value": "160"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "3756:6:4",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "3783:63:4",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "3818:9:4"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "3829:6:4"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "3814:3:4"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3814:22:4"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "3838:7:4"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "3793:20:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3793:53:4"
                      },
                      "variableNames": [
                        {
                          "name": "value5",
                          "nodeType": "YulIdentifier",
                          "src": "3783:6:4"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_bytes32t_uint256t_addresst_uint256t_addresst_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2887:9:4",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "2898:7:4",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2910:6:4",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "2918:6:4",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "2926:6:4",
                "type": ""
              },
              {
                "name": "value3",
                "nodeType": "YulTypedName",
                "src": "2934:6:4",
                "type": ""
              },
              {
                "name": "value4",
                "nodeType": "YulTypedName",
                "src": "2942:6:4",
                "type": ""
              },
              {
                "name": "value5",
                "nodeType": "YulTypedName",
                "src": "2950:6:4",
                "type": ""
              }
            ],
            "src": "2806:1057:4"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3897:152:4",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3914:1:4",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3917:77:4",
                        "type": "",
                        "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3907:6:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3907:88:4"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3907:88:4"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4011:1:4",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4014:4:4",
                        "type": "",
                        "value": "0x21"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4004:6:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4004:15:4"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4004:15:4"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4035:1:4",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4038:4:4",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "4028:6:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4028:15:4"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4028:15:4"
                }
              ]
            },
            "name": "panic_error_0x21",
            "nodeType": "YulFunctionDefinition",
            "src": "3869:180:4"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4181:206:4",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "4191:26:4",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4203:9:4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4214:2:4",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4199:3:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4199:18:4"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "4191:4:4"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "4271:6:4"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4284:9:4"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4295:1:4",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4280:3:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4280:17:4"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "4227:43:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4227:71:4"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4227:71:4"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "4352:6:4"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4365:9:4"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4376:2:4",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4361:3:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4361:18:4"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "4308:43:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4308:72:4"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4308:72:4"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "4145:9:4",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "4157:6:4",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "4165:6:4",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "4176:4:4",
                "type": ""
              }
            ],
            "src": "4055:332:4"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4456:80:4",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "4466:22:4",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "4481:6:4"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "4475:5:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4475:13:4"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "4466:5:4"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "4524:5:4"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "4497:26:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4497:33:4"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4497:33:4"
                }
              ]
            },
            "name": "abi_decode_t_uint256_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "4434:6:4",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "4442:3:4",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "4450:5:4",
                "type": ""
              }
            ],
            "src": "4393:143:4"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4619:274:4",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "4665:83:4",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                            "nodeType": "YulIdentifier",
                            "src": "4667:77:4"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "4667:79:4"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "4667:79:4"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "4640:7:4"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4649:9:4"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "4636:3:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4636:23:4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4661:2:4",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "4632:3:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4632:32:4"
                  },
                  "nodeType": "YulIf",
                  "src": "4629:119:4"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "4758:128:4",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "4773:15:4",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4787:1:4",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "4777:6:4",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "4802:74:4",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "4848:9:4"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "4859:6:4"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "4844:3:4"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "4844:22:4"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "4868:7:4"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_uint256_fromMemory",
                          "nodeType": "YulIdentifier",
                          "src": "4812:31:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4812:64:4"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "4802:6:4"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "4589:9:4",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "4600:7:4",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "4612:6:4",
                "type": ""
              }
            ],
            "src": "4542:351:4"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5053:288:4",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "5063:26:4",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5075:9:4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5086:2:4",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5071:3:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5071:18:4"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "5063:4:4"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "5143:6:4"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5156:9:4"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5167:1:4",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5152:3:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5152:17:4"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "5099:43:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5099:71:4"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5099:71:4"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "5224:6:4"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5237:9:4"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5248:2:4",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5233:3:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5233:18:4"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "5180:43:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5180:72:4"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5180:72:4"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value2",
                        "nodeType": "YulIdentifier",
                        "src": "5306:6:4"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5319:9:4"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5330:2:4",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5315:3:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5315:18:4"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "5262:43:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5262:72:4"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5262:72:4"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "5009:9:4",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "5021:6:4",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "5029:6:4",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "5037:6:4",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "5048:4:4",
                "type": ""
              }
            ],
            "src": "4899:442:4"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5389:48:4",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "5399:32:4",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "5424:5:4"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "5417:6:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5417:13:4"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "5410:6:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5410:21:4"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "5399:7:4"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_bool",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "5371:5:4",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "5381:7:4",
                "type": ""
              }
            ],
            "src": "5347:90:4"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5483:76:4",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "5537:16:4",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "5546:1:4",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "5549:1:4",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "5539:6:4"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "5539:12:4"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "5539:12:4"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "5506:5:4"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "5528:5:4"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_bool",
                              "nodeType": "YulIdentifier",
                              "src": "5513:14:4"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "5513:21:4"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "5503:2:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5503:32:4"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "5496:6:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5496:40:4"
                  },
                  "nodeType": "YulIf",
                  "src": "5493:60:4"
                }
              ]
            },
            "name": "validator_revert_t_bool",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "5476:5:4",
                "type": ""
              }
            ],
            "src": "5443:116:4"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5625:77:4",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "5635:22:4",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "5650:6:4"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "5644:5:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5644:13:4"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "5635:5:4"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "5690:5:4"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_bool",
                      "nodeType": "YulIdentifier",
                      "src": "5666:23:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5666:30:4"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5666:30:4"
                }
              ]
            },
            "name": "abi_decode_t_bool_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "5603:6:4",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "5611:3:4",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "5619:5:4",
                "type": ""
              }
            ],
            "src": "5565:137:4"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5782:271:4",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "5828:83:4",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                            "nodeType": "YulIdentifier",
                            "src": "5830:77:4"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "5830:79:4"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "5830:79:4"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "5803:7:4"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5812:9:4"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "5799:3:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5799:23:4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5824:2:4",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "5795:3:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5795:32:4"
                  },
                  "nodeType": "YulIf",
                  "src": "5792:119:4"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "5921:125:4",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "5936:15:4",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5950:1:4",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "5940:6:4",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "5965:71:4",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "6008:9:4"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "6019:6:4"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "6004:3:4"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "6004:22:4"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "6028:7:4"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_bool_fromMemory",
                          "nodeType": "YulIdentifier",
                          "src": "5975:28:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5975:61:4"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "5965:6:4"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_bool_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "5752:9:4",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "5763:7:4",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "5775:6:4",
                "type": ""
              }
            ],
            "src": "5708:345:4"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6185:206:4",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "6195:26:4",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6207:9:4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6218:2:4",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "6203:3:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6203:18:4"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "6195:4:4"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "6275:6:4"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6288:9:4"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6299:1:4",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6284:3:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6284:17:4"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "6231:43:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6231:71:4"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6231:71:4"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "6356:6:4"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6369:9:4"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6380:2:4",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6365:3:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6365:18:4"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "6312:43:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6312:72:4"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6312:72:4"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "6149:9:4",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "6161:6:4",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "6169:6:4",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "6180:4:4",
                "type": ""
              }
            ],
            "src": "6059:332:4"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6462:53:4",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "6479:3:4"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "6502:5:4"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_bytes32",
                          "nodeType": "YulIdentifier",
                          "src": "6484:17:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6484:24:4"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6472:6:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6472:37:4"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6472:37:4"
                }
              ]
            },
            "name": "abi_encode_t_bytes32_to_t_bytes32_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "6450:5:4",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "6457:3:4",
                "type": ""
              }
            ],
            "src": "6397:118:4"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6619:124:4",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "6629:26:4",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6641:9:4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6652:2:4",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "6637:3:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6637:18:4"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "6629:4:4"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "6709:6:4"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6722:9:4"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6733:1:4",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6718:3:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6718:17:4"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_bytes32_to_t_bytes32_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "6665:43:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6665:71:4"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6665:71:4"
                }
              ]
            },
            "name": "abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "6591:9:4",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "6603:6:4",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "6614:4:4",
                "type": ""
              }
            ],
            "src": "6521:222:4"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6875:206:4",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "6885:26:4",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6897:9:4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6908:2:4",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "6893:3:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6893:18:4"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "6885:4:4"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "6965:6:4"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6978:9:4"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6989:1:4",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6974:3:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6974:17:4"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_bytes32_to_t_bytes32_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "6921:43:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6921:71:4"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6921:71:4"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "7046:6:4"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7059:9:4"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7070:2:4",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7055:3:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7055:18:4"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "7002:43:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7002:72:4"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7002:72:4"
                }
              ]
            },
            "name": "abi_encode_tuple_t_bytes32_t_address__to_t_bytes32_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "6839:9:4",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "6851:6:4",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "6859:6:4",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "6870:4:4",
                "type": ""
              }
            ],
            "src": "6749:332:4"
          }
        ]
      },
      "contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_bytes32(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_bytes32(value) {\n        if iszero(eq(value, cleanup_t_bytes32(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bytes32(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bytes32(value)\n    }\n\n    function abi_decode_tuple_t_bytes32(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes32(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_uint256_t_address_t_uint256_t_address_t_address__to_t_uint256_t_address_t_uint256_t_address_t_address__fromStack_reversed(headStart , value4, value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 160)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_address_to_t_address_fromStack(value3,  add(headStart, 96))\n\n        abi_encode_t_address_to_t_address_fromStack(value4,  add(headStart, 128))\n\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_bytes32t_uint256t_addresst_uint256t_addresst_address(headStart, dataEnd) -> value0, value1, value2, value3, value4, value5 {\n        if slt(sub(dataEnd, headStart), 192) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes32(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value3 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 128\n\n            value4 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 160\n\n            value5 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x21() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x21)\n        revert(0, 0x24)\n    }\n\n    function abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_encode_t_bytes32_to_t_bytes32_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bytes32(value))\n    }\n\n    function abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_bytes32_t_address__to_t_bytes32_t_address__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n    }\n\n}\n",
      "id": 4,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "sourceMap": "50:3114:1:-:0;;;;;;;;;;;;;;;;;;;",
  "deployedSourceMap": "50:3114:1:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2829:333;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;;:::i;:::-;;;;;;;;1655:751;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;764:887;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2410:415;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2829:333;2882:17;2901:27;2930:18;2950:19;2971:28;3007:16;3026:5;:14;3032:7;3026:14;;;;;;;;;;;3007:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3054:4;:14;;;3070:4;:24;;;3096:4;:15;;;3113:4;:16;;;3131:4;:25;;;3046:111;;;;;;;;;;;2829:333;;;;;;;:::o;1655:751::-;1708:7;736:11;713:34;;;;;;;;:::i;:::-;;:10;:19;724:7;713:19;;;;;;;;;;;;;;;;;;;;;:34;;;;;;;;:::i;:::-;;;704:44;;;;;;1746:16:::1;1765:5:::0;:14:::1;1771:7;1765:14;;;;;;;;;;;1746:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;1807:13;1785:10;:19;1796:7;1785:19;;;;;;;;;;;;:35;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;1908:24;1941:4;:25;;;1908:59;;2000:18;:28;;;2029:4;:16;;;2055:4;2000:61;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1981:4;:15;;;:80;;1973:89;;;::::0;::::1;;2076:18;:31;;;2108:4;:16;;;2126:4;:15;;;2143:4;:15;;;2076:83;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2068:92;;;::::0;::::1;;2243:23;2275:4;:24;;;2243:57;;2314:17;:26;;;2341:4;:16;;;2359:4;:14;;;2314:60;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2306:69;;;::::0;::::1;;2387:14;2393:7;2387:14;;;;;;:::i;:::-;;;;;;;;1717:689;;;1655:751:::0;;:::o;764:887::-;943:7;627:14;604:37;;;;;;;;:::i;:::-;;:10;:19;615:7;604:19;;;;;;;;;;;;;;;;;;;;;:37;;;;;;;;:::i;:::-;;;595:47;;;;;;1022:23:::1;1054:20;1022:53;;1103:17;:27;;;1131:10;1151:4;1103:54;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1089:10;:68;;1081:77;;;::::0;::::1;;1172:17;:30;;;1203:10;1223:4;1230:10;1172:69;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1164:78;;;::::0;::::1;;1287:16;1306:235;;;;;;;;1330:10;1306:235;;;;1360:10;1306:235;;;;;;1399:20;1306:235;;;;;;1439:11;1306:235;;;;1471:12;1306:235;;;;;;1513:21;1306:235;;;;::::0;1287:254:::1;;1564:4;1547:5;:14:::0;1553:7:::1;1547:14;;;;;;;;;;;:21;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1596:11;1574:10:::0;:19:::1;1585:7;1574:19;;;;;;;;;;;;:33;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;1619:27;1624:7;1633:12;1619:27;;;;;;;:::i;:::-;;;;;;;;952:699;;764:887:::0;;;;;;;:::o;2410:415::-;2464:7;736:11;713:34;;;;;;;;:::i;:::-;;:10;:19;724:7;713:19;;;;;;;;;;;;;;;;;;;;;:34;;;;;;;;:::i;:::-;;;704:44;;;;;;2503:16:::1;2522:5:::0;:14:::1;2528:7;2522:14;;;;;;;;;;;2503:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;2564:14;2542:10;:19;2553:7;2542:19;;;;;;;;;;;;:36;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;2662:23;2694:4;:24;;;2662:57;;2733:17;:26;;;2760:4;:15;;;2777:4;:14;;;2733:59;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2725:68;;;::::0;::::1;;2805:15;2812:7;2805:15;;;;;;:::i;:::-;;;;;;;;2473:352;;2410:415:::0;;:::o;88:117:4:-;197:1;194;187:12;334:77;371:7;400:5;389:16;;334:77;;;:::o;417:122::-;490:24;508:5;490:24;:::i;:::-;483:5;480:35;470:63;;529:1;526;519:12;470:63;417:122;:::o;545:139::-;591:5;629:6;616:20;607:29;;645:33;672:5;645:33;:::i;:::-;545:139;;;;:::o;690:329::-;749:6;798:2;786:9;777:7;773:23;769:32;766:119;;;804:79;;:::i;:::-;766:119;924:1;949:53;994:7;985:6;974:9;970:22;949:53;:::i;:::-;939:63;;895:117;690:329;;;;:::o;1025:77::-;1062:7;1091:5;1080:16;;1025:77;;;:::o;1108:118::-;1195:24;1213:5;1195:24;:::i;:::-;1190:3;1183:37;1108:118;;:::o;1232:126::-;1269:7;1309:42;1302:5;1298:54;1287:65;;1232:126;;;:::o;1364:96::-;1401:7;1430:24;1448:5;1430:24;:::i;:::-;1419:35;;1364:96;;;:::o;1466:118::-;1553:24;1571:5;1553:24;:::i;:::-;1548:3;1541:37;1466:118;;:::o;1590:664::-;1795:4;1833:3;1822:9;1818:19;1810:27;;1847:71;1915:1;1904:9;1900:17;1891:6;1847:71;:::i;:::-;1928:72;1996:2;1985:9;1981:18;1972:6;1928:72;:::i;:::-;2010;2078:2;2067:9;2063:18;2054:6;2010:72;:::i;:::-;2092;2160:2;2149:9;2145:18;2136:6;2092:72;:::i;:::-;2174:73;2242:3;2231:9;2227:19;2218:6;2174:73;:::i;:::-;1590:664;;;;;;;;:::o;2260:122::-;2333:24;2351:5;2333:24;:::i;:::-;2326:5;2323:35;2313:63;;2372:1;2369;2362:12;2313:63;2260:122;:::o;2388:139::-;2434:5;2472:6;2459:20;2450:29;;2488:33;2515:5;2488:33;:::i;:::-;2388:139;;;;:::o;2533:122::-;2606:24;2624:5;2606:24;:::i;:::-;2599:5;2596:35;2586:63;;2645:1;2642;2635:12;2586:63;2533:122;:::o;2661:139::-;2707:5;2745:6;2732:20;2723:29;;2761:33;2788:5;2761:33;:::i;:::-;2661:139;;;;:::o;2806:1057::-;2910:6;2918;2926;2934;2942;2950;2999:3;2987:9;2978:7;2974:23;2970:33;2967:120;;;3006:79;;:::i;:::-;2967:120;3126:1;3151:53;3196:7;3187:6;3176:9;3172:22;3151:53;:::i;:::-;3141:63;;3097:117;3253:2;3279:53;3324:7;3315:6;3304:9;3300:22;3279:53;:::i;:::-;3269:63;;3224:118;3381:2;3407:53;3452:7;3443:6;3432:9;3428:22;3407:53;:::i;:::-;3397:63;;3352:118;3509:2;3535:53;3580:7;3571:6;3560:9;3556:22;3535:53;:::i;:::-;3525:63;;3480:118;3637:3;3664:53;3709:7;3700:6;3689:9;3685:22;3664:53;:::i;:::-;3654:63;;3608:119;3766:3;3793:53;3838:7;3829:6;3818:9;3814:22;3793:53;:::i;:::-;3783:63;;3737:119;2806:1057;;;;;;;;:::o;3869:180::-;3917:77;3914:1;3907:88;4014:4;4011:1;4004:15;4038:4;4035:1;4028:15;4055:332;4176:4;4214:2;4203:9;4199:18;4191:26;;4227:71;4295:1;4284:9;4280:17;4271:6;4227:71;:::i;:::-;4308:72;4376:2;4365:9;4361:18;4352:6;4308:72;:::i;:::-;4055:332;;;;;:::o;4393:143::-;4450:5;4481:6;4475:13;4466:22;;4497:33;4524:5;4497:33;:::i;:::-;4393:143;;;;:::o;4542:351::-;4612:6;4661:2;4649:9;4640:7;4636:23;4632:32;4629:119;;;4667:79;;:::i;:::-;4629:119;4787:1;4812:64;4868:7;4859:6;4848:9;4844:22;4812:64;:::i;:::-;4802:74;;4758:128;4542:351;;;;:::o;4899:442::-;5048:4;5086:2;5075:9;5071:18;5063:26;;5099:71;5167:1;5156:9;5152:17;5143:6;5099:71;:::i;:::-;5180:72;5248:2;5237:9;5233:18;5224:6;5180:72;:::i;:::-;5262;5330:2;5319:9;5315:18;5306:6;5262:72;:::i;:::-;4899:442;;;;;;:::o;5347:90::-;5381:7;5424:5;5417:13;5410:21;5399:32;;5347:90;;;:::o;5443:116::-;5513:21;5528:5;5513:21;:::i;:::-;5506:5;5503:32;5493:60;;5549:1;5546;5539:12;5493:60;5443:116;:::o;5565:137::-;5619:5;5650:6;5644:13;5635:22;;5666:30;5690:5;5666:30;:::i;:::-;5565:137;;;;:::o;5708:345::-;5775:6;5824:2;5812:9;5803:7;5799:23;5795:32;5792:119;;;5830:79;;:::i;:::-;5792:119;5950:1;5975:61;6028:7;6019:6;6008:9;6004:22;5975:61;:::i;:::-;5965:71;;5921:125;5708:345;;;;:::o;6059:332::-;6180:4;6218:2;6207:9;6203:18;6195:26;;6231:71;6299:1;6288:9;6284:17;6275:6;6231:71;:::i;:::-;6312:72;6380:2;6369:9;6365:18;6356:6;6312:72;:::i;:::-;6059:332;;;;;:::o;6397:118::-;6484:24;6502:5;6484:24;:::i;:::-;6479:3;6472:37;6397:118;;:::o;6521:222::-;6614:4;6652:2;6641:9;6637:18;6629:26;;6665:71;6733:1;6722:9;6718:17;6709:6;6665:71;:::i;:::-;6521:222;;;;:::o;6749:332::-;6870:4;6908:2;6897:9;6893:18;6885:26;;6921:71;6989:1;6978:9;6974:17;6965:6;6921:71;:::i;:::-;7002:72;7070:2;7059:9;7055:18;7046:6;7002:72;:::i;:::-;6749:332;;;;;:::o",
  "source": "\npragma solidity ^0.8.18;\n\nimport \"./ERC20.sol\";\n\ncontract SwapERC20ToERC20 {\n\n  struct Swap {\n    uint256 openValue;\n    address openTrader;\n    address openContractAddress;\n    uint256 closeValue;\n    address closeTrader;\n    address closeContractAddress;\n  }\n\n  enum States {\n    INVALID,\n    OPEN,\n    CLOSED,\n    EXPIRED\n  }\n\n  mapping (bytes32 => Swap) private swaps;\n  mapping (bytes32 => States) private swapStates;\n\n  event Open(bytes32 _swapID, address _closeTrader);\n  event Expire(bytes32 _swapID);\n  event Close(bytes32 _swapID);\n\n  modifier onlyInvalidSwaps(bytes32 _swapID) {\n    require (swapStates[_swapID] == States.INVALID);\n    _;\n  }\n\n  modifier onlyOpenSwaps(bytes32 _swapID) {\n    require (swapStates[_swapID] == States.OPEN);\n    _;\n  }\n\n  function open(bytes32 _swapID, uint256 _openValue, address _openContractAddress, uint256 _closeValue, address _closeTrader, address _closeContractAddress) public onlyInvalidSwaps(_swapID) {\n    // Transfer value from the opening trader to this contract.\n    ERC20 openERC20Contract = ERC20(_openContractAddress);\n    require(_openValue <= openERC20Contract.allowance(msg.sender, address(this)));\n    require(openERC20Contract.transferFrom(msg.sender, address(this), _openValue));\n\n    // Store the details of the swap.\n    Swap memory swap = Swap({\n      openValue: _openValue,\n      openTrader: msg.sender,\n      openContractAddress: _openContractAddress,\n      closeValue: _closeValue,\n      closeTrader: _closeTrader,\n      closeContractAddress: _closeContractAddress\n    });\n    swaps[_swapID] = swap;\n    swapStates[_swapID] = States.OPEN;\n\n    emit Open(_swapID, _closeTrader);\n  }\n\n  function close(bytes32 _swapID) public onlyOpenSwaps(_swapID) {\n    // Close the swap.\n    Swap memory swap = swaps[_swapID];\n    swapStates[_swapID] = States.CLOSED;\n\n    // Transfer the closing funds from the closing trader to the opening trader.\n    ERC20 closeERC20Contract = ERC20(swap.closeContractAddress);\n    require(swap.closeValue <= closeERC20Contract.allowance(swap.closeTrader, address(this)));\n    require(closeERC20Contract.transferFrom(swap.closeTrader, swap.openTrader, swap.closeValue));\n\n    // Transfer the opening funds from this contract to the closing trader.\n    ERC20 openERC20Contract = ERC20(swap.openContractAddress);\n    require(openERC20Contract.transfer(swap.closeTrader, swap.openValue));\n\n    emit Close(_swapID);\n  }\n\n  function expire(bytes32 _swapID) public onlyOpenSwaps(_swapID) {\n    // Expire the swap.\n    Swap memory swap = swaps[_swapID];\n    swapStates[_swapID] = States.EXPIRED;\n\n    // Transfer opening value from this contract back to the opening trader.\n    ERC20 openERC20Contract = ERC20(swap.openContractAddress);\n    require(openERC20Contract.transfer(swap.openTrader, swap.openValue));\n\n    emit Expire(_swapID);\n  }\n\n  function check(bytes32 _swapID) public view returns (uint256 openValue, address openContractAddress, uint256 closeValue, address closeTrader, address closeContractAddress) {\n    Swap memory swap = swaps[_swapID];\n    return (swap.openValue, swap.openContractAddress, swap.closeValue, swap.closeTrader, swap.closeContractAddress);\n  }\n}",
  "sourcePath": "/Users/wasim/29march2/SwapTokens/AtomicSwaps/contracts/SwapERC20ToERC20.sol",
  "ast": {
    "absolutePath": "project:/contracts/SwapERC20ToERC20.sol",
    "exportedSymbols": {
      "ERC20": [
        65
      ],
      "SwapERC20ToERC20": [
        385
      ]
    },
    "id": 386,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 67,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".18"
        ],
        "nodeType": "PragmaDirective",
        "src": "1:24:1"
      },
      {
        "absolutePath": "project:/contracts/ERC20.sol",
        "file": "./ERC20.sol",
        "id": 68,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 386,
        "sourceUnit": 66,
        "src": "27:21:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "SwapERC20ToERC20",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 385,
        "linearizedBaseContracts": [
          385
        ],
        "name": "SwapERC20ToERC20",
        "nameLocation": "59:16:1",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "canonicalName": "SwapERC20ToERC20.Swap",
            "id": 81,
            "members": [
              {
                "constant": false,
                "id": 70,
                "mutability": "mutable",
                "name": "openValue",
                "nameLocation": "107:9:1",
                "nodeType": "VariableDeclaration",
                "scope": 81,
                "src": "99:17:1",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 69,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "99:7:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 72,
                "mutability": "mutable",
                "name": "openTrader",
                "nameLocation": "130:10:1",
                "nodeType": "VariableDeclaration",
                "scope": 81,
                "src": "122:18:1",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 71,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "122:7:1",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 74,
                "mutability": "mutable",
                "name": "openContractAddress",
                "nameLocation": "154:19:1",
                "nodeType": "VariableDeclaration",
                "scope": 81,
                "src": "146:27:1",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 73,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "146:7:1",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 76,
                "mutability": "mutable",
                "name": "closeValue",
                "nameLocation": "187:10:1",
                "nodeType": "VariableDeclaration",
                "scope": 81,
                "src": "179:18:1",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 75,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "179:7:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 78,
                "mutability": "mutable",
                "name": "closeTrader",
                "nameLocation": "211:11:1",
                "nodeType": "VariableDeclaration",
                "scope": 81,
                "src": "203:19:1",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 77,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "203:7:1",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 80,
                "mutability": "mutable",
                "name": "closeContractAddress",
                "nameLocation": "236:20:1",
                "nodeType": "VariableDeclaration",
                "scope": 81,
                "src": "228:28:1",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 79,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "228:7:1",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "Swap",
            "nameLocation": "88:4:1",
            "nodeType": "StructDefinition",
            "scope": 385,
            "src": "81:180:1",
            "visibility": "public"
          },
          {
            "canonicalName": "SwapERC20ToERC20.States",
            "id": 86,
            "members": [
              {
                "id": 82,
                "name": "INVALID",
                "nameLocation": "283:7:1",
                "nodeType": "EnumValue",
                "src": "283:7:1"
              },
              {
                "id": 83,
                "name": "OPEN",
                "nameLocation": "296:4:1",
                "nodeType": "EnumValue",
                "src": "296:4:1"
              },
              {
                "id": 84,
                "name": "CLOSED",
                "nameLocation": "306:6:1",
                "nodeType": "EnumValue",
                "src": "306:6:1"
              },
              {
                "id": 85,
                "name": "EXPIRED",
                "nameLocation": "318:7:1",
                "nodeType": "EnumValue",
                "src": "318:7:1"
              }
            ],
            "name": "States",
            "nameLocation": "270:6:1",
            "nodeType": "EnumDefinition",
            "src": "265:64:1"
          },
          {
            "constant": false,
            "id": 91,
            "mutability": "mutable",
            "name": "swaps",
            "nameLocation": "367:5:1",
            "nodeType": "VariableDeclaration",
            "scope": 385,
            "src": "333:39:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Swap_$81_storage_$",
              "typeString": "mapping(bytes32 => struct SwapERC20ToERC20.Swap)"
            },
            "typeName": {
              "id": 90,
              "keyName": "",
              "keyNameLocation": "-1:-1:-1",
              "keyType": {
                "id": 87,
                "name": "bytes32",
                "nodeType": "ElementaryTypeName",
                "src": "342:7:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                }
              },
              "nodeType": "Mapping",
              "src": "333:25:1",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Swap_$81_storage_$",
                "typeString": "mapping(bytes32 => struct SwapERC20ToERC20.Swap)"
              },
              "valueName": "",
              "valueNameLocation": "-1:-1:-1",
              "valueType": {
                "id": 89,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 88,
                  "name": "Swap",
                  "nameLocations": [
                    "353:4:1"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 81,
                  "src": "353:4:1"
                },
                "referencedDeclaration": 81,
                "src": "353:4:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Swap_$81_storage_ptr",
                  "typeString": "struct SwapERC20ToERC20.Swap"
                }
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 96,
            "mutability": "mutable",
            "name": "swapStates",
            "nameLocation": "412:10:1",
            "nodeType": "VariableDeclaration",
            "scope": 385,
            "src": "376:46:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_bytes32_$_t_enum$_States_$86_$",
              "typeString": "mapping(bytes32 => enum SwapERC20ToERC20.States)"
            },
            "typeName": {
              "id": 95,
              "keyName": "",
              "keyNameLocation": "-1:-1:-1",
              "keyType": {
                "id": 92,
                "name": "bytes32",
                "nodeType": "ElementaryTypeName",
                "src": "385:7:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                }
              },
              "nodeType": "Mapping",
              "src": "376:27:1",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_bytes32_$_t_enum$_States_$86_$",
                "typeString": "mapping(bytes32 => enum SwapERC20ToERC20.States)"
              },
              "valueName": "",
              "valueNameLocation": "-1:-1:-1",
              "valueType": {
                "id": 94,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 93,
                  "name": "States",
                  "nameLocations": [
                    "396:6:1"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 86,
                  "src": "396:6:1"
                },
                "referencedDeclaration": 86,
                "src": "396:6:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_enum$_States_$86",
                  "typeString": "enum SwapERC20ToERC20.States"
                }
              }
            },
            "visibility": "private"
          },
          {
            "anonymous": false,
            "eventSelector": "b5894ff5a344c5160302de0b2027c5b55f4914e9d8e8c11b377b559e5ec789eb",
            "id": 102,
            "name": "Open",
            "nameLocation": "433:4:1",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 101,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 98,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "_swapID",
                  "nameLocation": "446:7:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 102,
                  "src": "438:15:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 97,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "438:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 100,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "_closeTrader",
                  "nameLocation": "463:12:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 102,
                  "src": "455:20:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 99,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "455:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "437:39:1"
            },
            "src": "427:50:1"
          },
          {
            "anonymous": false,
            "eventSelector": "bddd9b693ea862fad6ecf78fd51c065be26fda94d1f3cad3a7d691453a38a735",
            "id": 106,
            "name": "Expire",
            "nameLocation": "486:6:1",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 105,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 104,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "_swapID",
                  "nameLocation": "501:7:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 106,
                  "src": "493:15:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 103,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "493:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "492:17:1"
            },
            "src": "480:30:1"
          },
          {
            "anonymous": false,
            "eventSelector": "c9d8209586aca26a4f59cc70108e4cf2f637da8cb4133c78a3946bc50581ea28",
            "id": 110,
            "name": "Close",
            "nameLocation": "519:5:1",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 109,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 108,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "_swapID",
                  "nameLocation": "533:7:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 110,
                  "src": "525:15:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 107,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "525:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "524:17:1"
            },
            "src": "513:29:1"
          },
          {
            "body": {
              "id": 124,
              "nodeType": "Block",
              "src": "589:65:1",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_enum$_States_$86",
                          "typeString": "enum SwapERC20ToERC20.States"
                        },
                        "id": 120,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "baseExpression": {
                            "id": 115,
                            "name": "swapStates",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 96,
                            "src": "604:10:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_bytes32_$_t_enum$_States_$86_$",
                              "typeString": "mapping(bytes32 => enum SwapERC20ToERC20.States)"
                            }
                          },
                          "id": 117,
                          "indexExpression": {
                            "id": 116,
                            "name": "_swapID",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 112,
                            "src": "615:7:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "604:19:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_States_$86",
                            "typeString": "enum SwapERC20ToERC20.States"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "id": 118,
                            "name": "States",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 86,
                            "src": "627:6:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_enum$_States_$86_$",
                              "typeString": "type(enum SwapERC20ToERC20.States)"
                            }
                          },
                          "id": 119,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberLocation": "634:7:1",
                          "memberName": "INVALID",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 82,
                          "src": "627:14:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_States_$86",
                            "typeString": "enum SwapERC20ToERC20.States"
                          }
                        },
                        "src": "604:37:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 114,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "595:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 121,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "595:47:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 122,
                  "nodeType": "ExpressionStatement",
                  "src": "595:47:1"
                },
                {
                  "id": 123,
                  "nodeType": "PlaceholderStatement",
                  "src": "648:1:1"
                }
              ]
            },
            "id": 125,
            "name": "onlyInvalidSwaps",
            "nameLocation": "555:16:1",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 113,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 112,
                  "mutability": "mutable",
                  "name": "_swapID",
                  "nameLocation": "580:7:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 125,
                  "src": "572:15:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 111,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "572:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "571:17:1"
            },
            "src": "546:108:1",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 139,
              "nodeType": "Block",
              "src": "698:62:1",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_enum$_States_$86",
                          "typeString": "enum SwapERC20ToERC20.States"
                        },
                        "id": 135,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "baseExpression": {
                            "id": 130,
                            "name": "swapStates",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 96,
                            "src": "713:10:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_bytes32_$_t_enum$_States_$86_$",
                              "typeString": "mapping(bytes32 => enum SwapERC20ToERC20.States)"
                            }
                          },
                          "id": 132,
                          "indexExpression": {
                            "id": 131,
                            "name": "_swapID",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 127,
                            "src": "724:7:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "713:19:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_States_$86",
                            "typeString": "enum SwapERC20ToERC20.States"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "id": 133,
                            "name": "States",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 86,
                            "src": "736:6:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_enum$_States_$86_$",
                              "typeString": "type(enum SwapERC20ToERC20.States)"
                            }
                          },
                          "id": 134,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberLocation": "743:4:1",
                          "memberName": "OPEN",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 83,
                          "src": "736:11:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_States_$86",
                            "typeString": "enum SwapERC20ToERC20.States"
                          }
                        },
                        "src": "713:34:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 129,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "704:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 136,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "704:44:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 137,
                  "nodeType": "ExpressionStatement",
                  "src": "704:44:1"
                },
                {
                  "id": 138,
                  "nodeType": "PlaceholderStatement",
                  "src": "754:1:1"
                }
              ]
            },
            "id": 140,
            "name": "onlyOpenSwaps",
            "nameLocation": "667:13:1",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 128,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 127,
                  "mutability": "mutable",
                  "name": "_swapID",
                  "nameLocation": "689:7:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 140,
                  "src": "681:15:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 126,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "681:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "680:17:1"
            },
            "src": "658:102:1",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 223,
              "nodeType": "Block",
              "src": "952:699:1",
              "statements": [
                {
                  "assignments": [
                    160
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 160,
                      "mutability": "mutable",
                      "name": "openERC20Contract",
                      "nameLocation": "1028:17:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 223,
                      "src": "1022:23:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ERC20_$65",
                        "typeString": "contract ERC20"
                      },
                      "typeName": {
                        "id": 159,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 158,
                          "name": "ERC20",
                          "nameLocations": [
                            "1022:5:1"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 65,
                          "src": "1022:5:1"
                        },
                        "referencedDeclaration": 65,
                        "src": "1022:5:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$65",
                          "typeString": "contract ERC20"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 164,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 162,
                        "name": "_openContractAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 146,
                        "src": "1054:20:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 161,
                      "name": "ERC20",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 65,
                      "src": "1048:5:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_ERC20_$65_$",
                        "typeString": "type(contract ERC20)"
                      }
                    },
                    "id": 163,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1048:27:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC20_$65",
                      "typeString": "contract ERC20"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1022:53:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 176,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 166,
                          "name": "_openValue",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 144,
                          "src": "1089:10:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 169,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967281,
                                "src": "1131:3:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 170,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "1135:6:1",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "1131:10:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "id": 173,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4294967268,
                                  "src": "1151:4:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_SwapERC20ToERC20_$385",
                                    "typeString": "contract SwapERC20ToERC20"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_SwapERC20ToERC20_$385",
                                    "typeString": "contract SwapERC20ToERC20"
                                  }
                                ],
                                "id": 172,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "1143:7:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 171,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "1143:7:1",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 174,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1143:13:1",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "id": 167,
                              "name": "openERC20Contract",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 160,
                              "src": "1103:17:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ERC20_$65",
                                "typeString": "contract ERC20"
                              }
                            },
                            "id": 168,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "1121:9:1",
                            "memberName": "allowance",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 35,
                            "src": "1103:27:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address,address) view external returns (uint256)"
                            }
                          },
                          "id": 175,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1103:54:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "1089:68:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 165,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1081:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 177,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1081:77:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 178,
                  "nodeType": "ExpressionStatement",
                  "src": "1081:77:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "expression": {
                              "id": 182,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967281,
                              "src": "1203:3:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 183,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "1207:6:1",
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "1203:10:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "arguments": [
                              {
                                "id": 186,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967268,
                                "src": "1223:4:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_SwapERC20ToERC20_$385",
                                  "typeString": "contract SwapERC20ToERC20"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_SwapERC20ToERC20_$385",
                                  "typeString": "contract SwapERC20ToERC20"
                                }
                              ],
                              "id": 185,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "1215:7:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 184,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "1215:7:1",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 187,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1215:13:1",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 188,
                            "name": "_openValue",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 144,
                            "src": "1230:10:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "id": 180,
                            "name": "openERC20Contract",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 160,
                            "src": "1172:17:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC20_$65",
                              "typeString": "contract ERC20"
                            }
                          },
                          "id": 181,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "1190:12:1",
                          "memberName": "transferFrom",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 55,
                          "src": "1172:30:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (address,address,uint256) external returns (bool)"
                          }
                        },
                        "id": 189,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1172:69:1",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 179,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1164:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 190,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1164:78:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 191,
                  "nodeType": "ExpressionStatement",
                  "src": "1164:78:1"
                },
                {
                  "assignments": [
                    194
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 194,
                      "mutability": "mutable",
                      "name": "swap",
                      "nameLocation": "1299:4:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 223,
                      "src": "1287:16:1",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Swap_$81_memory_ptr",
                        "typeString": "struct SwapERC20ToERC20.Swap"
                      },
                      "typeName": {
                        "id": 193,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 192,
                          "name": "Swap",
                          "nameLocations": [
                            "1287:4:1"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 81,
                          "src": "1287:4:1"
                        },
                        "referencedDeclaration": 81,
                        "src": "1287:4:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Swap_$81_storage_ptr",
                          "typeString": "struct SwapERC20ToERC20.Swap"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 204,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 196,
                        "name": "_openValue",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 144,
                        "src": "1330:10:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "id": 197,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "1360:3:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 198,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "1364:6:1",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "1360:10:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 199,
                        "name": "_openContractAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 146,
                        "src": "1399:20:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 200,
                        "name": "_closeValue",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 148,
                        "src": "1439:11:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 201,
                        "name": "_closeTrader",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 150,
                        "src": "1471:12:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 202,
                        "name": "_closeContractAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 152,
                        "src": "1513:21:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 195,
                      "name": "Swap",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 81,
                      "src": "1306:4:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_struct$_Swap_$81_storage_ptr_$",
                        "typeString": "type(struct SwapERC20ToERC20.Swap storage pointer)"
                      }
                    },
                    "id": 203,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "structConstructorCall",
                    "lValueRequested": false,
                    "nameLocations": [
                      "1319:9:1",
                      "1348:10:1",
                      "1378:19:1",
                      "1427:10:1",
                      "1458:11:1",
                      "1491:20:1"
                    ],
                    "names": [
                      "openValue",
                      "openTrader",
                      "openContractAddress",
                      "closeValue",
                      "closeTrader",
                      "closeContractAddress"
                    ],
                    "nodeType": "FunctionCall",
                    "src": "1306:235:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Swap_$81_memory_ptr",
                      "typeString": "struct SwapERC20ToERC20.Swap memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1287:254:1"
                },
                {
                  "expression": {
                    "id": 209,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 205,
                        "name": "swaps",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 91,
                        "src": "1547:5:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Swap_$81_storage_$",
                          "typeString": "mapping(bytes32 => struct SwapERC20ToERC20.Swap storage ref)"
                        }
                      },
                      "id": 207,
                      "indexExpression": {
                        "id": 206,
                        "name": "_swapID",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 142,
                        "src": "1553:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1547:14:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Swap_$81_storage",
                        "typeString": "struct SwapERC20ToERC20.Swap storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 208,
                      "name": "swap",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 194,
                      "src": "1564:4:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Swap_$81_memory_ptr",
                        "typeString": "struct SwapERC20ToERC20.Swap memory"
                      }
                    },
                    "src": "1547:21:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Swap_$81_storage",
                      "typeString": "struct SwapERC20ToERC20.Swap storage ref"
                    }
                  },
                  "id": 210,
                  "nodeType": "ExpressionStatement",
                  "src": "1547:21:1"
                },
                {
                  "expression": {
                    "id": 216,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 211,
                        "name": "swapStates",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 96,
                        "src": "1574:10:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_bytes32_$_t_enum$_States_$86_$",
                          "typeString": "mapping(bytes32 => enum SwapERC20ToERC20.States)"
                        }
                      },
                      "id": 213,
                      "indexExpression": {
                        "id": 212,
                        "name": "_swapID",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 142,
                        "src": "1585:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1574:19:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_States_$86",
                        "typeString": "enum SwapERC20ToERC20.States"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 214,
                        "name": "States",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 86,
                        "src": "1596:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_States_$86_$",
                          "typeString": "type(enum SwapERC20ToERC20.States)"
                        }
                      },
                      "id": 215,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberLocation": "1603:4:1",
                      "memberName": "OPEN",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 83,
                      "src": "1596:11:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_States_$86",
                        "typeString": "enum SwapERC20ToERC20.States"
                      }
                    },
                    "src": "1574:33:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_States_$86",
                      "typeString": "enum SwapERC20ToERC20.States"
                    }
                  },
                  "id": 217,
                  "nodeType": "ExpressionStatement",
                  "src": "1574:33:1"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 219,
                        "name": "_swapID",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 142,
                        "src": "1624:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 220,
                        "name": "_closeTrader",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 150,
                        "src": "1633:12:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 218,
                      "name": "Open",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 102,
                      "src": "1619:4:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_address_$returns$__$",
                        "typeString": "function (bytes32,address)"
                      }
                    },
                    "id": 221,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1619:27:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 222,
                  "nodeType": "EmitStatement",
                  "src": "1614:32:1"
                }
              ]
            },
            "functionSelector": "5454a438",
            "id": 224,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 155,
                    "name": "_swapID",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 142,
                    "src": "943:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  }
                ],
                "id": 156,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 154,
                  "name": "onlyInvalidSwaps",
                  "nameLocations": [
                    "926:16:1"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 125,
                  "src": "926:16:1"
                },
                "nodeType": "ModifierInvocation",
                "src": "926:25:1"
              }
            ],
            "name": "open",
            "nameLocation": "773:4:1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 153,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 142,
                  "mutability": "mutable",
                  "name": "_swapID",
                  "nameLocation": "786:7:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 224,
                  "src": "778:15:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 141,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "778:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 144,
                  "mutability": "mutable",
                  "name": "_openValue",
                  "nameLocation": "803:10:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 224,
                  "src": "795:18:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 143,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "795:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 146,
                  "mutability": "mutable",
                  "name": "_openContractAddress",
                  "nameLocation": "823:20:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 224,
                  "src": "815:28:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 145,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "815:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 148,
                  "mutability": "mutable",
                  "name": "_closeValue",
                  "nameLocation": "853:11:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 224,
                  "src": "845:19:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 147,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "845:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 150,
                  "mutability": "mutable",
                  "name": "_closeTrader",
                  "nameLocation": "874:12:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 224,
                  "src": "866:20:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 149,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "866:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 152,
                  "mutability": "mutable",
                  "name": "_closeContractAddress",
                  "nameLocation": "896:21:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 224,
                  "src": "888:29:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 151,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "888:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "777:141:1"
            },
            "returnParameters": {
              "id": 157,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "952:0:1"
            },
            "scope": 385,
            "src": "764:887:1",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 303,
              "nodeType": "Block",
              "src": "1717:689:1",
              "statements": [
                {
                  "assignments": [
                    234
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 234,
                      "mutability": "mutable",
                      "name": "swap",
                      "nameLocation": "1758:4:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 303,
                      "src": "1746:16:1",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Swap_$81_memory_ptr",
                        "typeString": "struct SwapERC20ToERC20.Swap"
                      },
                      "typeName": {
                        "id": 233,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 232,
                          "name": "Swap",
                          "nameLocations": [
                            "1746:4:1"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 81,
                          "src": "1746:4:1"
                        },
                        "referencedDeclaration": 81,
                        "src": "1746:4:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Swap_$81_storage_ptr",
                          "typeString": "struct SwapERC20ToERC20.Swap"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 238,
                  "initialValue": {
                    "baseExpression": {
                      "id": 235,
                      "name": "swaps",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 91,
                      "src": "1765:5:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Swap_$81_storage_$",
                        "typeString": "mapping(bytes32 => struct SwapERC20ToERC20.Swap storage ref)"
                      }
                    },
                    "id": 237,
                    "indexExpression": {
                      "id": 236,
                      "name": "_swapID",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 226,
                      "src": "1771:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "1765:14:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Swap_$81_storage",
                      "typeString": "struct SwapERC20ToERC20.Swap storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1746:33:1"
                },
                {
                  "expression": {
                    "id": 244,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 239,
                        "name": "swapStates",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 96,
                        "src": "1785:10:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_bytes32_$_t_enum$_States_$86_$",
                          "typeString": "mapping(bytes32 => enum SwapERC20ToERC20.States)"
                        }
                      },
                      "id": 241,
                      "indexExpression": {
                        "id": 240,
                        "name": "_swapID",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 226,
                        "src": "1796:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1785:19:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_States_$86",
                        "typeString": "enum SwapERC20ToERC20.States"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 242,
                        "name": "States",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 86,
                        "src": "1807:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_States_$86_$",
                          "typeString": "type(enum SwapERC20ToERC20.States)"
                        }
                      },
                      "id": 243,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberLocation": "1814:6:1",
                      "memberName": "CLOSED",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 84,
                      "src": "1807:13:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_States_$86",
                        "typeString": "enum SwapERC20ToERC20.States"
                      }
                    },
                    "src": "1785:35:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_States_$86",
                      "typeString": "enum SwapERC20ToERC20.States"
                    }
                  },
                  "id": 245,
                  "nodeType": "ExpressionStatement",
                  "src": "1785:35:1"
                },
                {
                  "assignments": [
                    248
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 248,
                      "mutability": "mutable",
                      "name": "closeERC20Contract",
                      "nameLocation": "1914:18:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 303,
                      "src": "1908:24:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ERC20_$65",
                        "typeString": "contract ERC20"
                      },
                      "typeName": {
                        "id": 247,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 246,
                          "name": "ERC20",
                          "nameLocations": [
                            "1908:5:1"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 65,
                          "src": "1908:5:1"
                        },
                        "referencedDeclaration": 65,
                        "src": "1908:5:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$65",
                          "typeString": "contract ERC20"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 253,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 250,
                          "name": "swap",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 234,
                          "src": "1941:4:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Swap_$81_memory_ptr",
                            "typeString": "struct SwapERC20ToERC20.Swap memory"
                          }
                        },
                        "id": 251,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "1946:20:1",
                        "memberName": "closeContractAddress",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 80,
                        "src": "1941:25:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 249,
                      "name": "ERC20",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 65,
                      "src": "1935:5:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_ERC20_$65_$",
                        "typeString": "type(contract ERC20)"
                      }
                    },
                    "id": 252,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1935:32:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC20_$65",
                      "typeString": "contract ERC20"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1908:59:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 266,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 255,
                            "name": "swap",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 234,
                            "src": "1981:4:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Swap_$81_memory_ptr",
                              "typeString": "struct SwapERC20ToERC20.Swap memory"
                            }
                          },
                          "id": 256,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "1986:10:1",
                          "memberName": "closeValue",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 76,
                          "src": "1981:15:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 259,
                                "name": "swap",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 234,
                                "src": "2029:4:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Swap_$81_memory_ptr",
                                  "typeString": "struct SwapERC20ToERC20.Swap memory"
                                }
                              },
                              "id": 260,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "2034:11:1",
                              "memberName": "closeTrader",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 78,
                              "src": "2029:16:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "id": 263,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4294967268,
                                  "src": "2055:4:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_SwapERC20ToERC20_$385",
                                    "typeString": "contract SwapERC20ToERC20"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_SwapERC20ToERC20_$385",
                                    "typeString": "contract SwapERC20ToERC20"
                                  }
                                ],
                                "id": 262,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "2047:7:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 261,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "2047:7:1",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 264,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2047:13:1",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "id": 257,
                              "name": "closeERC20Contract",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 248,
                              "src": "2000:18:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ERC20_$65",
                                "typeString": "contract ERC20"
                              }
                            },
                            "id": 258,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "2019:9:1",
                            "memberName": "allowance",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 35,
                            "src": "2000:28:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address,address) view external returns (uint256)"
                            }
                          },
                          "id": 265,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2000:61:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "1981:80:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 254,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1973:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 267,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1973:89:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 268,
                  "nodeType": "ExpressionStatement",
                  "src": "1973:89:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "expression": {
                              "id": 272,
                              "name": "swap",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 234,
                              "src": "2108:4:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Swap_$81_memory_ptr",
                                "typeString": "struct SwapERC20ToERC20.Swap memory"
                              }
                            },
                            "id": 273,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "2113:11:1",
                            "memberName": "closeTrader",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 78,
                            "src": "2108:16:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "expression": {
                              "id": 274,
                              "name": "swap",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 234,
                              "src": "2126:4:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Swap_$81_memory_ptr",
                                "typeString": "struct SwapERC20ToERC20.Swap memory"
                              }
                            },
                            "id": 275,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "2131:10:1",
                            "memberName": "openTrader",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 72,
                            "src": "2126:15:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "expression": {
                              "id": 276,
                              "name": "swap",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 234,
                              "src": "2143:4:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Swap_$81_memory_ptr",
                                "typeString": "struct SwapERC20ToERC20.Swap memory"
                              }
                            },
                            "id": 277,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "2148:10:1",
                            "memberName": "closeValue",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 76,
                            "src": "2143:15:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "id": 270,
                            "name": "closeERC20Contract",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 248,
                            "src": "2076:18:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC20_$65",
                              "typeString": "contract ERC20"
                            }
                          },
                          "id": 271,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "2095:12:1",
                          "memberName": "transferFrom",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 55,
                          "src": "2076:31:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (address,address,uint256) external returns (bool)"
                          }
                        },
                        "id": 278,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2076:83:1",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 269,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "2068:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 279,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2068:92:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 280,
                  "nodeType": "ExpressionStatement",
                  "src": "2068:92:1"
                },
                {
                  "assignments": [
                    283
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 283,
                      "mutability": "mutable",
                      "name": "openERC20Contract",
                      "nameLocation": "2249:17:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 303,
                      "src": "2243:23:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ERC20_$65",
                        "typeString": "contract ERC20"
                      },
                      "typeName": {
                        "id": 282,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 281,
                          "name": "ERC20",
                          "nameLocations": [
                            "2243:5:1"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 65,
                          "src": "2243:5:1"
                        },
                        "referencedDeclaration": 65,
                        "src": "2243:5:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$65",
                          "typeString": "contract ERC20"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 288,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 285,
                          "name": "swap",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 234,
                          "src": "2275:4:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Swap_$81_memory_ptr",
                            "typeString": "struct SwapERC20ToERC20.Swap memory"
                          }
                        },
                        "id": 286,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "2280:19:1",
                        "memberName": "openContractAddress",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 74,
                        "src": "2275:24:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 284,
                      "name": "ERC20",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 65,
                      "src": "2269:5:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_ERC20_$65_$",
                        "typeString": "type(contract ERC20)"
                      }
                    },
                    "id": 287,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2269:31:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC20_$65",
                      "typeString": "contract ERC20"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2243:57:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "expression": {
                              "id": 292,
                              "name": "swap",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 234,
                              "src": "2341:4:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Swap_$81_memory_ptr",
                                "typeString": "struct SwapERC20ToERC20.Swap memory"
                              }
                            },
                            "id": 293,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "2346:11:1",
                            "memberName": "closeTrader",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 78,
                            "src": "2341:16:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "expression": {
                              "id": 294,
                              "name": "swap",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 234,
                              "src": "2359:4:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Swap_$81_memory_ptr",
                                "typeString": "struct SwapERC20ToERC20.Swap memory"
                              }
                            },
                            "id": 295,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "2364:9:1",
                            "memberName": "openValue",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 70,
                            "src": "2359:14:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "id": 290,
                            "name": "openERC20Contract",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 283,
                            "src": "2314:17:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC20_$65",
                              "typeString": "contract ERC20"
                            }
                          },
                          "id": 291,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "2332:8:1",
                          "memberName": "transfer",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 44,
                          "src": "2314:26:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (address,uint256) external returns (bool)"
                          }
                        },
                        "id": 296,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2314:60:1",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 289,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "2306:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 297,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2306:69:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 298,
                  "nodeType": "ExpressionStatement",
                  "src": "2306:69:1"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 300,
                        "name": "_swapID",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 226,
                        "src": "2393:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "id": 299,
                      "name": "Close",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 110,
                      "src": "2387:5:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$returns$__$",
                        "typeString": "function (bytes32)"
                      }
                    },
                    "id": 301,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2387:14:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 302,
                  "nodeType": "EmitStatement",
                  "src": "2382:19:1"
                }
              ]
            },
            "functionSelector": "39c79e0c",
            "id": 304,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 229,
                    "name": "_swapID",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 226,
                    "src": "1708:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  }
                ],
                "id": 230,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 228,
                  "name": "onlyOpenSwaps",
                  "nameLocations": [
                    "1694:13:1"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 140,
                  "src": "1694:13:1"
                },
                "nodeType": "ModifierInvocation",
                "src": "1694:22:1"
              }
            ],
            "name": "close",
            "nameLocation": "1664:5:1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 227,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 226,
                  "mutability": "mutable",
                  "name": "_swapID",
                  "nameLocation": "1678:7:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 304,
                  "src": "1670:15:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 225,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1670:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1669:17:1"
            },
            "returnParameters": {
              "id": 231,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1717:0:1"
            },
            "scope": 385,
            "src": "1655:751:1",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 348,
              "nodeType": "Block",
              "src": "2473:352:1",
              "statements": [
                {
                  "assignments": [
                    314
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 314,
                      "mutability": "mutable",
                      "name": "swap",
                      "nameLocation": "2515:4:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 348,
                      "src": "2503:16:1",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Swap_$81_memory_ptr",
                        "typeString": "struct SwapERC20ToERC20.Swap"
                      },
                      "typeName": {
                        "id": 313,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 312,
                          "name": "Swap",
                          "nameLocations": [
                            "2503:4:1"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 81,
                          "src": "2503:4:1"
                        },
                        "referencedDeclaration": 81,
                        "src": "2503:4:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Swap_$81_storage_ptr",
                          "typeString": "struct SwapERC20ToERC20.Swap"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 318,
                  "initialValue": {
                    "baseExpression": {
                      "id": 315,
                      "name": "swaps",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 91,
                      "src": "2522:5:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Swap_$81_storage_$",
                        "typeString": "mapping(bytes32 => struct SwapERC20ToERC20.Swap storage ref)"
                      }
                    },
                    "id": 317,
                    "indexExpression": {
                      "id": 316,
                      "name": "_swapID",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 306,
                      "src": "2528:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "2522:14:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Swap_$81_storage",
                      "typeString": "struct SwapERC20ToERC20.Swap storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2503:33:1"
                },
                {
                  "expression": {
                    "id": 324,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 319,
                        "name": "swapStates",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 96,
                        "src": "2542:10:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_bytes32_$_t_enum$_States_$86_$",
                          "typeString": "mapping(bytes32 => enum SwapERC20ToERC20.States)"
                        }
                      },
                      "id": 321,
                      "indexExpression": {
                        "id": 320,
                        "name": "_swapID",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 306,
                        "src": "2553:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2542:19:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_States_$86",
                        "typeString": "enum SwapERC20ToERC20.States"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 322,
                        "name": "States",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 86,
                        "src": "2564:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_States_$86_$",
                          "typeString": "type(enum SwapERC20ToERC20.States)"
                        }
                      },
                      "id": 323,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberLocation": "2571:7:1",
                      "memberName": "EXPIRED",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 85,
                      "src": "2564:14:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_States_$86",
                        "typeString": "enum SwapERC20ToERC20.States"
                      }
                    },
                    "src": "2542:36:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_States_$86",
                      "typeString": "enum SwapERC20ToERC20.States"
                    }
                  },
                  "id": 325,
                  "nodeType": "ExpressionStatement",
                  "src": "2542:36:1"
                },
                {
                  "assignments": [
                    328
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 328,
                      "mutability": "mutable",
                      "name": "openERC20Contract",
                      "nameLocation": "2668:17:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 348,
                      "src": "2662:23:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ERC20_$65",
                        "typeString": "contract ERC20"
                      },
                      "typeName": {
                        "id": 327,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 326,
                          "name": "ERC20",
                          "nameLocations": [
                            "2662:5:1"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 65,
                          "src": "2662:5:1"
                        },
                        "referencedDeclaration": 65,
                        "src": "2662:5:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$65",
                          "typeString": "contract ERC20"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 333,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 330,
                          "name": "swap",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 314,
                          "src": "2694:4:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Swap_$81_memory_ptr",
                            "typeString": "struct SwapERC20ToERC20.Swap memory"
                          }
                        },
                        "id": 331,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "2699:19:1",
                        "memberName": "openContractAddress",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 74,
                        "src": "2694:24:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 329,
                      "name": "ERC20",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 65,
                      "src": "2688:5:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_ERC20_$65_$",
                        "typeString": "type(contract ERC20)"
                      }
                    },
                    "id": 332,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2688:31:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC20_$65",
                      "typeString": "contract ERC20"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2662:57:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "expression": {
                              "id": 337,
                              "name": "swap",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 314,
                              "src": "2760:4:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Swap_$81_memory_ptr",
                                "typeString": "struct SwapERC20ToERC20.Swap memory"
                              }
                            },
                            "id": 338,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "2765:10:1",
                            "memberName": "openTrader",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 72,
                            "src": "2760:15:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "expression": {
                              "id": 339,
                              "name": "swap",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 314,
                              "src": "2777:4:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Swap_$81_memory_ptr",
                                "typeString": "struct SwapERC20ToERC20.Swap memory"
                              }
                            },
                            "id": 340,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "2782:9:1",
                            "memberName": "openValue",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 70,
                            "src": "2777:14:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "id": 335,
                            "name": "openERC20Contract",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 328,
                            "src": "2733:17:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC20_$65",
                              "typeString": "contract ERC20"
                            }
                          },
                          "id": 336,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "2751:8:1",
                          "memberName": "transfer",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 44,
                          "src": "2733:26:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (address,uint256) external returns (bool)"
                          }
                        },
                        "id": 341,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2733:59:1",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 334,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "2725:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 342,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2725:68:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 343,
                  "nodeType": "ExpressionStatement",
                  "src": "2725:68:1"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 345,
                        "name": "_swapID",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 306,
                        "src": "2812:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "id": 344,
                      "name": "Expire",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 106,
                      "src": "2805:6:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$returns$__$",
                        "typeString": "function (bytes32)"
                      }
                    },
                    "id": 346,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2805:15:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 347,
                  "nodeType": "EmitStatement",
                  "src": "2800:20:1"
                }
              ]
            },
            "functionSelector": "c6441798",
            "id": 349,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 309,
                    "name": "_swapID",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 306,
                    "src": "2464:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  }
                ],
                "id": 310,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 308,
                  "name": "onlyOpenSwaps",
                  "nameLocations": [
                    "2450:13:1"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 140,
                  "src": "2450:13:1"
                },
                "nodeType": "ModifierInvocation",
                "src": "2450:22:1"
              }
            ],
            "name": "expire",
            "nameLocation": "2419:6:1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 307,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 306,
                  "mutability": "mutable",
                  "name": "_swapID",
                  "nameLocation": "2434:7:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 349,
                  "src": "2426:15:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 305,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "2426:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2425:17:1"
            },
            "returnParameters": {
              "id": 311,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2473:0:1"
            },
            "scope": 385,
            "src": "2410:415:1",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 383,
              "nodeType": "Block",
              "src": "3001:161:1",
              "statements": [
                {
                  "assignments": [
                    366
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 366,
                      "mutability": "mutable",
                      "name": "swap",
                      "nameLocation": "3019:4:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 383,
                      "src": "3007:16:1",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Swap_$81_memory_ptr",
                        "typeString": "struct SwapERC20ToERC20.Swap"
                      },
                      "typeName": {
                        "id": 365,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 364,
                          "name": "Swap",
                          "nameLocations": [
                            "3007:4:1"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 81,
                          "src": "3007:4:1"
                        },
                        "referencedDeclaration": 81,
                        "src": "3007:4:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Swap_$81_storage_ptr",
                          "typeString": "struct SwapERC20ToERC20.Swap"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 370,
                  "initialValue": {
                    "baseExpression": {
                      "id": 367,
                      "name": "swaps",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 91,
                      "src": "3026:5:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Swap_$81_storage_$",
                        "typeString": "mapping(bytes32 => struct SwapERC20ToERC20.Swap storage ref)"
                      }
                    },
                    "id": 369,
                    "indexExpression": {
                      "id": 368,
                      "name": "_swapID",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 351,
                      "src": "3032:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "3026:14:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Swap_$81_storage",
                      "typeString": "struct SwapERC20ToERC20.Swap storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3007:33:1"
                },
                {
                  "expression": {
                    "components": [
                      {
                        "expression": {
                          "id": 371,
                          "name": "swap",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 366,
                          "src": "3054:4:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Swap_$81_memory_ptr",
                            "typeString": "struct SwapERC20ToERC20.Swap memory"
                          }
                        },
                        "id": 372,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "3059:9:1",
                        "memberName": "openValue",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 70,
                        "src": "3054:14:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "id": 373,
                          "name": "swap",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 366,
                          "src": "3070:4:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Swap_$81_memory_ptr",
                            "typeString": "struct SwapERC20ToERC20.Swap memory"
                          }
                        },
                        "id": 374,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "3075:19:1",
                        "memberName": "openContractAddress",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 74,
                        "src": "3070:24:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 375,
                          "name": "swap",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 366,
                          "src": "3096:4:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Swap_$81_memory_ptr",
                            "typeString": "struct SwapERC20ToERC20.Swap memory"
                          }
                        },
                        "id": 376,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "3101:10:1",
                        "memberName": "closeValue",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 76,
                        "src": "3096:15:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "id": 377,
                          "name": "swap",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 366,
                          "src": "3113:4:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Swap_$81_memory_ptr",
                            "typeString": "struct SwapERC20ToERC20.Swap memory"
                          }
                        },
                        "id": 378,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "3118:11:1",
                        "memberName": "closeTrader",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 78,
                        "src": "3113:16:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 379,
                          "name": "swap",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 366,
                          "src": "3131:4:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Swap_$81_memory_ptr",
                            "typeString": "struct SwapERC20ToERC20.Swap memory"
                          }
                        },
                        "id": 380,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "3136:20:1",
                        "memberName": "closeContractAddress",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 80,
                        "src": "3131:25:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "id": 381,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "3053:104:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint256_$_t_address_$_t_uint256_$_t_address_$_t_address_$",
                      "typeString": "tuple(uint256,address,uint256,address,address)"
                    }
                  },
                  "functionReturnParameters": 363,
                  "id": 382,
                  "nodeType": "Return",
                  "src": "3046:111:1"
                }
              ]
            },
            "functionSelector": "399e0792",
            "id": 384,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "check",
            "nameLocation": "2838:5:1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 352,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 351,
                  "mutability": "mutable",
                  "name": "_swapID",
                  "nameLocation": "2852:7:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 384,
                  "src": "2844:15:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 350,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "2844:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2843:17:1"
            },
            "returnParameters": {
              "id": 363,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 354,
                  "mutability": "mutable",
                  "name": "openValue",
                  "nameLocation": "2890:9:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 384,
                  "src": "2882:17:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 353,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2882:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 356,
                  "mutability": "mutable",
                  "name": "openContractAddress",
                  "nameLocation": "2909:19:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 384,
                  "src": "2901:27:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 355,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2901:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 358,
                  "mutability": "mutable",
                  "name": "closeValue",
                  "nameLocation": "2938:10:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 384,
                  "src": "2930:18:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 357,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2930:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 360,
                  "mutability": "mutable",
                  "name": "closeTrader",
                  "nameLocation": "2958:11:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 384,
                  "src": "2950:19:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 359,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2950:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 362,
                  "mutability": "mutable",
                  "name": "closeContractAddress",
                  "nameLocation": "2979:20:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 384,
                  "src": "2971:28:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 361,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2971:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2881:119:1"
            },
            "scope": 385,
            "src": "2829:333:1",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 386,
        "src": "50:3114:1",
        "usedErrors": []
      }
    ],
    "src": "1:3163:1"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.18+commit.87f61d96.Emscripten.clang"
  },
  "networks": {
    "5777": {
      "events": {},
      "links": {},
      "address": "0x376E309322E11E0Df3e20Ac239Eff5345076ec71",
      "transactionHash": "0x179788a5cca6a24e010a237e888afe439e3100560fe89e2c95851976d7c74720"
    }
  },
  "schemaVersion": "3.4.13",
  "updatedAt": "2023-03-28T13:03:35.790Z",
  "networkType": "ethereum",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}