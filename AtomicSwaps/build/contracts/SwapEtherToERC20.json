{
  "contractName": "SwapEtherToERC20",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "_swapID",
          "type": "bytes32"
        }
      ],
      "name": "Close",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "_swapID",
          "type": "bytes32"
        }
      ],
      "name": "Expire",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "_swapID",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "_closeTrader",
          "type": "address"
        }
      ],
      "name": "Open",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "_swapID",
          "type": "bytes32"
        },
        {
          "internalType": "uint256",
          "name": "_erc20Value",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_erc20Trader",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_erc20ContractAddress",
          "type": "address"
        }
      ],
      "name": "open",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function",
      "payable": true
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "_swapID",
          "type": "bytes32"
        }
      ],
      "name": "close",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "_swapID",
          "type": "bytes32"
        }
      ],
      "name": "expire",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "_swapID",
          "type": "bytes32"
        }
      ],
      "name": "check",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "erc20Value",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "erc20Trader",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "erc20ContractAddress",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"_swapID\",\"type\":\"bytes32\"}],\"name\":\"Close\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"_swapID\",\"type\":\"bytes32\"}],\"name\":\"Expire\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"_swapID\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_closeTrader\",\"type\":\"address\"}],\"name\":\"Open\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_swapID\",\"type\":\"bytes32\"}],\"name\":\"check\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"erc20Value\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"erc20Trader\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"erc20ContractAddress\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_swapID\",\"type\":\"bytes32\"}],\"name\":\"close\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_swapID\",\"type\":\"bytes32\"}],\"name\":\"expire\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_swapID\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"_erc20Value\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_erc20Trader\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_erc20ContractAddress\",\"type\":\"address\"}],\"name\":\"open\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"project:/contracts/SwapEtherToERC20.sol\":\"SwapEtherToERC20\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"project:/contracts/ERC20.sol\":{\"keccak256\":\"0x662e6c6428fbc170e0c9ded4f28fe94675537ce6a2af2d4af7337c8f624f21be\",\"urls\":[\"bzz-raw://8806feecd01cf711a5346ddff7f2f7b11e43d7e49205989f7cdf019628f2587d\",\"dweb:/ipfs/QmeSRY143NH5ZDnyRf2VNh1qQziMdmZaYXCe8hdh8FqxWG\"]},\"project:/contracts/SwapEtherToERC20.sol\":{\"keccak256\":\"0x436c172d669ee2c682c86ce68e2213ee80a2d3ba001aef9363980d3b8f4818de\",\"urls\":[\"bzz-raw://a08644edfc658e4759ed7b358ff51a49510125330bc27abd3f1f828067e166af\",\"dweb:/ipfs/QmTHNJQN3fWm7YsuWdLQE5k9Qj3GXpVmysDu31UufnJHEz\"]}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b50610ded806100206000396000f3fe60806040526004361061003f5760003560e01c8063399e07921461004457806339c79e0c146100845780636e792315146100ad578063c6441798146100c9575b600080fd5b34801561005057600080fd5b5061006b60048036038101906100669190610aa3565b6100f2565b60405161007b9493929190610b2a565b60405180910390f35b34801561009057600080fd5b506100ab60048036038101906100a69190610aa3565b610253565b005b6100c760048036038101906100c29190610bc7565b6105d8565b005b3480156100d557600080fd5b506100f060048036038101906100eb9190610aa3565b610812565b005b60008060008060008060008781526020019081526020016000206040518060a0016040529081600082015481526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600282015481526020016003820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016004820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681525050905080600001518160400151826060015183608001519450945094509450509193509193565b806001600381111561026857610267610c2e565b5b6001600083815260200190815260200160002060009054906101000a900460ff16600381111561029b5761029a610c2e565b5b146102a557600080fd5b60008060008481526020019081526020016000206040518060a0016040529081600082015481526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600282015481526020016003820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016004820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681525050905060026001600085815260200190815260200160002060006101000a81548160ff0219169083600381111561041357610412610c2e565b5b02179055506000816080015190508073ffffffffffffffffffffffffffffffffffffffff1663dd62ed3e8360600151306040518363ffffffff1660e01b8152600401610460929190610c5d565b602060405180830381865afa15801561047d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104a19190610c9b565b826040015111156104b157600080fd5b8073ffffffffffffffffffffffffffffffffffffffff166323b872dd8360600151846020015185604001516040518463ffffffff1660e01b81526004016104fa93929190610cc8565b6020604051808303816000875af1158015610519573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061053d9190610d37565b61054657600080fd5b6000826060015190508073ffffffffffffffffffffffffffffffffffffffff166108fc84600001519081150290604051600060405180830381858888f19350505050158015610599573d6000803e3d6000fd5b507fc9d8209586aca26a4f59cc70108e4cf2f637da8cb4133c78a3946bc50581ea28856040516105c99190610d73565b60405180910390a15050505050565b83600060038111156105ed576105ec610c2e565b5b6001600083815260200190815260200160002060009054906101000a900460ff1660038111156106205761061f610c2e565b5b1461062a57600080fd5b60006040518060a001604052803481526020013373ffffffffffffffffffffffffffffffffffffffff1681526020018681526020018573ffffffffffffffffffffffffffffffffffffffff1681526020018473ffffffffffffffffffffffffffffffffffffffff168152509050806000808881526020019081526020016000206000820151816000015560208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506040820151816002015560608201518160030160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060808201518160040160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550905050600180600088815260200190815260200160002060006101000a81548160ff021916908360038111156107cc576107cb610c2e565b5b02179055507fb5894ff5a344c5160302de0b2027c5b55f4914e9d8e8c11b377b559e5ec789eb8685604051610802929190610d8e565b60405180910390a1505050505050565b806001600381111561082757610826610c2e565b5b6001600083815260200190815260200160002060009054906101000a900460ff16600381111561085a57610859610c2e565b5b1461086457600080fd5b60008060008481526020019081526020016000206040518060a0016040529081600082015481526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600282015481526020016003820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016004820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681525050905060036001600085815260200190815260200160002060006101000a81548160ff021916908360038111156109d2576109d1610c2e565b5b02179055506000816020015190508073ffffffffffffffffffffffffffffffffffffffff166108fc83600001519081150290604051600060405180830381858888f19350505050158015610a2a573d6000803e3d6000fd5b507fbddd9b693ea862fad6ecf78fd51c065be26fda94d1f3cad3a7d691453a38a73584604051610a5a9190610d73565b60405180910390a150505050565b600080fd5b6000819050919050565b610a8081610a6d565b8114610a8b57600080fd5b50565b600081359050610a9d81610a77565b92915050565b600060208284031215610ab957610ab8610a68565b5b6000610ac784828501610a8e565b91505092915050565b6000819050919050565b610ae381610ad0565b82525050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610b1482610ae9565b9050919050565b610b2481610b09565b82525050565b6000608082019050610b3f6000830187610ada565b610b4c6020830186610ada565b610b596040830185610b1b565b610b666060830184610b1b565b95945050505050565b610b7881610ad0565b8114610b8357600080fd5b50565b600081359050610b9581610b6f565b92915050565b610ba481610b09565b8114610baf57600080fd5b50565b600081359050610bc181610b9b565b92915050565b60008060008060808587031215610be157610be0610a68565b5b6000610bef87828801610a8e565b9450506020610c0087828801610b86565b9350506040610c1187828801610bb2565b9250506060610c2287828801610bb2565b91505092959194509250565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b6000604082019050610c726000830185610b1b565b610c7f6020830184610b1b565b9392505050565b600081519050610c9581610b6f565b92915050565b600060208284031215610cb157610cb0610a68565b5b6000610cbf84828501610c86565b91505092915050565b6000606082019050610cdd6000830186610b1b565b610cea6020830185610b1b565b610cf76040830184610ada565b949350505050565b60008115159050919050565b610d1481610cff565b8114610d1f57600080fd5b50565b600081519050610d3181610d0b565b92915050565b600060208284031215610d4d57610d4c610a68565b5b6000610d5b84828501610d22565b91505092915050565b610d6d81610a6d565b82525050565b6000602082019050610d886000830184610d64565b92915050565b6000604082019050610da36000830185610d64565b610db06020830184610b1b565b939250505056fea264697066735822122096c7581002fff84ad02f387728ead5d4246319afd6d39912d6372c6597d8e9bb64736f6c63430008120033",
  "deployedBytecode": "0x60806040526004361061003f5760003560e01c8063399e07921461004457806339c79e0c146100845780636e792315146100ad578063c6441798146100c9575b600080fd5b34801561005057600080fd5b5061006b60048036038101906100669190610aa3565b6100f2565b60405161007b9493929190610b2a565b60405180910390f35b34801561009057600080fd5b506100ab60048036038101906100a69190610aa3565b610253565b005b6100c760048036038101906100c29190610bc7565b6105d8565b005b3480156100d557600080fd5b506100f060048036038101906100eb9190610aa3565b610812565b005b60008060008060008060008781526020019081526020016000206040518060a0016040529081600082015481526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600282015481526020016003820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016004820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681525050905080600001518160400151826060015183608001519450945094509450509193509193565b806001600381111561026857610267610c2e565b5b6001600083815260200190815260200160002060009054906101000a900460ff16600381111561029b5761029a610c2e565b5b146102a557600080fd5b60008060008481526020019081526020016000206040518060a0016040529081600082015481526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600282015481526020016003820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016004820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681525050905060026001600085815260200190815260200160002060006101000a81548160ff0219169083600381111561041357610412610c2e565b5b02179055506000816080015190508073ffffffffffffffffffffffffffffffffffffffff1663dd62ed3e8360600151306040518363ffffffff1660e01b8152600401610460929190610c5d565b602060405180830381865afa15801561047d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104a19190610c9b565b826040015111156104b157600080fd5b8073ffffffffffffffffffffffffffffffffffffffff166323b872dd8360600151846020015185604001516040518463ffffffff1660e01b81526004016104fa93929190610cc8565b6020604051808303816000875af1158015610519573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061053d9190610d37565b61054657600080fd5b6000826060015190508073ffffffffffffffffffffffffffffffffffffffff166108fc84600001519081150290604051600060405180830381858888f19350505050158015610599573d6000803e3d6000fd5b507fc9d8209586aca26a4f59cc70108e4cf2f637da8cb4133c78a3946bc50581ea28856040516105c99190610d73565b60405180910390a15050505050565b83600060038111156105ed576105ec610c2e565b5b6001600083815260200190815260200160002060009054906101000a900460ff1660038111156106205761061f610c2e565b5b1461062a57600080fd5b60006040518060a001604052803481526020013373ffffffffffffffffffffffffffffffffffffffff1681526020018681526020018573ffffffffffffffffffffffffffffffffffffffff1681526020018473ffffffffffffffffffffffffffffffffffffffff168152509050806000808881526020019081526020016000206000820151816000015560208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506040820151816002015560608201518160030160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060808201518160040160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550905050600180600088815260200190815260200160002060006101000a81548160ff021916908360038111156107cc576107cb610c2e565b5b02179055507fb5894ff5a344c5160302de0b2027c5b55f4914e9d8e8c11b377b559e5ec789eb8685604051610802929190610d8e565b60405180910390a1505050505050565b806001600381111561082757610826610c2e565b5b6001600083815260200190815260200160002060009054906101000a900460ff16600381111561085a57610859610c2e565b5b1461086457600080fd5b60008060008481526020019081526020016000206040518060a0016040529081600082015481526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600282015481526020016003820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016004820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681525050905060036001600085815260200190815260200160002060006101000a81548160ff021916908360038111156109d2576109d1610c2e565b5b02179055506000816020015190508073ffffffffffffffffffffffffffffffffffffffff166108fc83600001519081150290604051600060405180830381858888f19350505050158015610a2a573d6000803e3d6000fd5b507fbddd9b693ea862fad6ecf78fd51c065be26fda94d1f3cad3a7d691453a38a73584604051610a5a9190610d73565b60405180910390a150505050565b600080fd5b6000819050919050565b610a8081610a6d565b8114610a8b57600080fd5b50565b600081359050610a9d81610a77565b92915050565b600060208284031215610ab957610ab8610a68565b5b6000610ac784828501610a8e565b91505092915050565b6000819050919050565b610ae381610ad0565b82525050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610b1482610ae9565b9050919050565b610b2481610b09565b82525050565b6000608082019050610b3f6000830187610ada565b610b4c6020830186610ada565b610b596040830185610b1b565b610b666060830184610b1b565b95945050505050565b610b7881610ad0565b8114610b8357600080fd5b50565b600081359050610b9581610b6f565b92915050565b610ba481610b09565b8114610baf57600080fd5b50565b600081359050610bc181610b9b565b92915050565b60008060008060808587031215610be157610be0610a68565b5b6000610bef87828801610a8e565b9450506020610c0087828801610b86565b9350506040610c1187828801610bb2565b9250506060610c2287828801610bb2565b91505092959194509250565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b6000604082019050610c726000830185610b1b565b610c7f6020830184610b1b565b9392505050565b600081519050610c9581610b6f565b92915050565b600060208284031215610cb157610cb0610a68565b5b6000610cbf84828501610c86565b91505092915050565b6000606082019050610cdd6000830186610b1b565b610cea6020830185610b1b565b610cf76040830184610ada565b949350505050565b60008115159050919050565b610d1481610cff565b8114610d1f57600080fd5b50565b600081519050610d3181610d0b565b92915050565b600060208284031215610d4d57610d4c610a68565b5b6000610d5b84828501610d22565b91505092915050565b610d6d81610a6d565b82525050565b6000602082019050610d886000830184610d64565b92915050565b6000604082019050610da36000830185610d64565b610db06020830184610b1b565b939250505056fea264697066735822122096c7581002fff84ad02f387728ead5d4246319afd6d39912d6372c6597d8e9bb64736f6c63430008120033",
  "immutableReferences": {},
  "generatedSources": [],
  "deployedGeneratedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:6343:4",
        "statements": [
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "47:35:4",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "57:19:4",
                  "value": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "73:2:4",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "67:5:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "67:9:4"
                  },
                  "variableNames": [
                    {
                      "name": "memPtr",
                      "nodeType": "YulIdentifier",
                      "src": "57:6:4"
                    }
                  ]
                }
              ]
            },
            "name": "allocate_unbounded",
            "nodeType": "YulFunctionDefinition",
            "returnVariables": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "40:6:4",
                "type": ""
              }
            ],
            "src": "7:75:4"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "177:28:4",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "194:1:4",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "197:1:4",
                        "type": "",
                        "value": "0"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "187:6:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "187:12:4"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "187:12:4"
                }
              ]
            },
            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
            "nodeType": "YulFunctionDefinition",
            "src": "88:117:4"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "300:28:4",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "317:1:4",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "320:1:4",
                        "type": "",
                        "value": "0"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "310:6:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "310:12:4"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "310:12:4"
                }
              ]
            },
            "name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
            "nodeType": "YulFunctionDefinition",
            "src": "211:117:4"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "379:32:4",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "389:16:4",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "400:5:4"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "389:7:4"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_bytes32",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "361:5:4",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "371:7:4",
                "type": ""
              }
            ],
            "src": "334:77:4"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "460:79:4",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "517:16:4",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "526:1:4",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "529:1:4",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "519:6:4"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "519:12:4"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "519:12:4"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "483:5:4"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "508:5:4"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_bytes32",
                              "nodeType": "YulIdentifier",
                              "src": "490:17:4"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "490:24:4"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "480:2:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "480:35:4"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "473:6:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "473:43:4"
                  },
                  "nodeType": "YulIf",
                  "src": "470:63:4"
                }
              ]
            },
            "name": "validator_revert_t_bytes32",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "453:5:4",
                "type": ""
              }
            ],
            "src": "417:122:4"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "597:87:4",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "607:29:4",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "629:6:4"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "616:12:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "616:20:4"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "607:5:4"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "672:5:4"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_bytes32",
                      "nodeType": "YulIdentifier",
                      "src": "645:26:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "645:33:4"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "645:33:4"
                }
              ]
            },
            "name": "abi_decode_t_bytes32",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "575:6:4",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "583:3:4",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "591:5:4",
                "type": ""
              }
            ],
            "src": "545:139:4"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "756:263:4",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "802:83:4",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                            "nodeType": "YulIdentifier",
                            "src": "804:77:4"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "804:79:4"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "804:79:4"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "777:7:4"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "786:9:4"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "773:3:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "773:23:4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "798:2:4",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "769:3:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "769:32:4"
                  },
                  "nodeType": "YulIf",
                  "src": "766:119:4"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "895:117:4",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "910:15:4",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "924:1:4",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "914:6:4",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "939:63:4",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "974:9:4"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "985:6:4"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "970:3:4"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "970:22:4"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "994:7:4"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_bytes32",
                          "nodeType": "YulIdentifier",
                          "src": "949:20:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "949:53:4"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "939:6:4"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_bytes32",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "726:9:4",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "737:7:4",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "749:6:4",
                "type": ""
              }
            ],
            "src": "690:329:4"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1070:32:4",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1080:16:4",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "1091:5:4"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "1080:7:4"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1052:5:4",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "1062:7:4",
                "type": ""
              }
            ],
            "src": "1025:77:4"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1173:53:4",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "1190:3:4"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "1213:5:4"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "1195:17:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1195:24:4"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1183:6:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1183:37:4"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1183:37:4"
                }
              ]
            },
            "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1161:5:4",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "1168:3:4",
                "type": ""
              }
            ],
            "src": "1108:118:4"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1277:81:4",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1287:65:4",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "1302:5:4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1309:42:4",
                        "type": "",
                        "value": "0xffffffffffffffffffffffffffffffffffffffff"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "1298:3:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1298:54:4"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "1287:7:4"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_uint160",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1259:5:4",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "1269:7:4",
                "type": ""
              }
            ],
            "src": "1232:126:4"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1409:51:4",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1419:35:4",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "1448:5:4"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint160",
                      "nodeType": "YulIdentifier",
                      "src": "1430:17:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1430:24:4"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "1419:7:4"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1391:5:4",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "1401:7:4",
                "type": ""
              }
            ],
            "src": "1364:96:4"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1531:53:4",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "1548:3:4"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "1571:5:4"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "1553:17:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1553:24:4"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1541:6:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1541:37:4"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1541:37:4"
                }
              ]
            },
            "name": "abi_encode_t_address_to_t_address_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1519:5:4",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "1526:3:4",
                "type": ""
              }
            ],
            "src": "1466:118:4"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1772:371:4",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1782:27:4",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1794:9:4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1805:3:4",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1790:3:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1790:19:4"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "1782:4:4"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "1863:6:4"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1876:9:4"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1887:1:4",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1872:3:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1872:17:4"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "1819:43:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1819:71:4"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1819:71:4"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "1944:6:4"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1957:9:4"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1968:2:4",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1953:3:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1953:18:4"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "1900:43:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1900:72:4"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1900:72:4"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value2",
                        "nodeType": "YulIdentifier",
                        "src": "2026:6:4"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2039:9:4"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2050:2:4",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2035:3:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2035:18:4"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "1982:43:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1982:72:4"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1982:72:4"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value3",
                        "nodeType": "YulIdentifier",
                        "src": "2108:6:4"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2121:9:4"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2132:2:4",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2117:3:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2117:18:4"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "2064:43:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2064:72:4"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2064:72:4"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint256_t_uint256_t_address_t_address__to_t_uint256_t_uint256_t_address_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1720:9:4",
                "type": ""
              },
              {
                "name": "value3",
                "nodeType": "YulTypedName",
                "src": "1732:6:4",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "1740:6:4",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "1748:6:4",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1756:6:4",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "1767:4:4",
                "type": ""
              }
            ],
            "src": "1590:553:4"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2192:79:4",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2249:16:4",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2258:1:4",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2261:1:4",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "2251:6:4"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2251:12:4"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2251:12:4"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "2215:5:4"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "2240:5:4"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_uint256",
                              "nodeType": "YulIdentifier",
                              "src": "2222:17:4"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2222:24:4"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "2212:2:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2212:35:4"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "2205:6:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2205:43:4"
                  },
                  "nodeType": "YulIf",
                  "src": "2202:63:4"
                }
              ]
            },
            "name": "validator_revert_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "2185:5:4",
                "type": ""
              }
            ],
            "src": "2149:122:4"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2329:87:4",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2339:29:4",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "2361:6:4"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "2348:12:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2348:20:4"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "2339:5:4"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "2404:5:4"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "2377:26:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2377:33:4"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2377:33:4"
                }
              ]
            },
            "name": "abi_decode_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "2307:6:4",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "2315:3:4",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "2323:5:4",
                "type": ""
              }
            ],
            "src": "2277:139:4"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2465:79:4",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2522:16:4",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2531:1:4",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2534:1:4",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "2524:6:4"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2524:12:4"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2524:12:4"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "2488:5:4"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "2513:5:4"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_address",
                              "nodeType": "YulIdentifier",
                              "src": "2495:17:4"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2495:24:4"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "2485:2:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2485:35:4"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "2478:6:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2478:43:4"
                  },
                  "nodeType": "YulIf",
                  "src": "2475:63:4"
                }
              ]
            },
            "name": "validator_revert_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "2458:5:4",
                "type": ""
              }
            ],
            "src": "2422:122:4"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2602:87:4",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2612:29:4",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "2634:6:4"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "2621:12:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2621:20:4"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "2612:5:4"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "2677:5:4"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "2650:26:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2650:33:4"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2650:33:4"
                }
              ]
            },
            "name": "abi_decode_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "2580:6:4",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "2588:3:4",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "2596:5:4",
                "type": ""
              }
            ],
            "src": "2550:139:4"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2812:648:4",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2859:83:4",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                            "nodeType": "YulIdentifier",
                            "src": "2861:77:4"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2861:79:4"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2861:79:4"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2833:7:4"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2842:9:4"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "2829:3:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2829:23:4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2854:3:4",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "2825:3:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2825:33:4"
                  },
                  "nodeType": "YulIf",
                  "src": "2822:120:4"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "2952:117:4",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "2967:15:4",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2981:1:4",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "2971:6:4",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "2996:63:4",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "3031:9:4"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "3042:6:4"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "3027:3:4"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3027:22:4"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "3051:7:4"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_bytes32",
                          "nodeType": "YulIdentifier",
                          "src": "3006:20:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3006:53:4"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "2996:6:4"
                        }
                      ]
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "3079:118:4",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "3094:16:4",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3108:2:4",
                        "type": "",
                        "value": "32"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "3098:6:4",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "3124:63:4",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "3159:9:4"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "3170:6:4"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "3155:3:4"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3155:22:4"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "3179:7:4"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "3134:20:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3134:53:4"
                      },
                      "variableNames": [
                        {
                          "name": "value1",
                          "nodeType": "YulIdentifier",
                          "src": "3124:6:4"
                        }
                      ]
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "3207:118:4",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "3222:16:4",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3236:2:4",
                        "type": "",
                        "value": "64"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "3226:6:4",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "3252:63:4",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "3287:9:4"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "3298:6:4"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "3283:3:4"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3283:22:4"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "3307:7:4"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "3262:20:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3262:53:4"
                      },
                      "variableNames": [
                        {
                          "name": "value2",
                          "nodeType": "YulIdentifier",
                          "src": "3252:6:4"
                        }
                      ]
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "3335:118:4",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "3350:16:4",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3364:2:4",
                        "type": "",
                        "value": "96"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "3354:6:4",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "3380:63:4",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "3415:9:4"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "3426:6:4"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "3411:3:4"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3411:22:4"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "3435:7:4"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "3390:20:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3390:53:4"
                      },
                      "variableNames": [
                        {
                          "name": "value3",
                          "nodeType": "YulIdentifier",
                          "src": "3380:6:4"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_bytes32t_uint256t_addresst_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2758:9:4",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "2769:7:4",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2781:6:4",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "2789:6:4",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "2797:6:4",
                "type": ""
              },
              {
                "name": "value3",
                "nodeType": "YulTypedName",
                "src": "2805:6:4",
                "type": ""
              }
            ],
            "src": "2695:765:4"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3494:152:4",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3511:1:4",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3514:77:4",
                        "type": "",
                        "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3504:6:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3504:88:4"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3504:88:4"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3608:1:4",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3611:4:4",
                        "type": "",
                        "value": "0x21"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3601:6:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3601:15:4"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3601:15:4"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3632:1:4",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3635:4:4",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "3625:6:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3625:15:4"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3625:15:4"
                }
              ]
            },
            "name": "panic_error_0x21",
            "nodeType": "YulFunctionDefinition",
            "src": "3466:180:4"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3778:206:4",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3788:26:4",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3800:9:4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3811:2:4",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3796:3:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3796:18:4"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "3788:4:4"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "3868:6:4"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3881:9:4"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3892:1:4",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3877:3:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3877:17:4"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "3824:43:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3824:71:4"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3824:71:4"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "3949:6:4"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3962:9:4"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3973:2:4",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3958:3:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3958:18:4"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "3905:43:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3905:72:4"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3905:72:4"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3742:9:4",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "3754:6:4",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "3762:6:4",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "3773:4:4",
                "type": ""
              }
            ],
            "src": "3652:332:4"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4053:80:4",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "4063:22:4",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "4078:6:4"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "4072:5:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4072:13:4"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "4063:5:4"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "4121:5:4"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "4094:26:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4094:33:4"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4094:33:4"
                }
              ]
            },
            "name": "abi_decode_t_uint256_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "4031:6:4",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "4039:3:4",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "4047:5:4",
                "type": ""
              }
            ],
            "src": "3990:143:4"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4216:274:4",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "4262:83:4",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                            "nodeType": "YulIdentifier",
                            "src": "4264:77:4"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "4264:79:4"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "4264:79:4"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "4237:7:4"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4246:9:4"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "4233:3:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4233:23:4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4258:2:4",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "4229:3:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4229:32:4"
                  },
                  "nodeType": "YulIf",
                  "src": "4226:119:4"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "4355:128:4",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "4370:15:4",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4384:1:4",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "4374:6:4",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "4399:74:4",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "4445:9:4"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "4456:6:4"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "4441:3:4"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "4441:22:4"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "4465:7:4"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_uint256_fromMemory",
                          "nodeType": "YulIdentifier",
                          "src": "4409:31:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4409:64:4"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "4399:6:4"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "4186:9:4",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "4197:7:4",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "4209:6:4",
                "type": ""
              }
            ],
            "src": "4139:351:4"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4650:288:4",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "4660:26:4",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4672:9:4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4683:2:4",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4668:3:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4668:18:4"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "4660:4:4"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "4740:6:4"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4753:9:4"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4764:1:4",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4749:3:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4749:17:4"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "4696:43:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4696:71:4"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4696:71:4"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "4821:6:4"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4834:9:4"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4845:2:4",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4830:3:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4830:18:4"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "4777:43:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4777:72:4"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4777:72:4"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value2",
                        "nodeType": "YulIdentifier",
                        "src": "4903:6:4"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4916:9:4"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4927:2:4",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4912:3:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4912:18:4"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "4859:43:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4859:72:4"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4859:72:4"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "4606:9:4",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "4618:6:4",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "4626:6:4",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "4634:6:4",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "4645:4:4",
                "type": ""
              }
            ],
            "src": "4496:442:4"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4986:48:4",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "4996:32:4",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "5021:5:4"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "5014:6:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5014:13:4"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "5007:6:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5007:21:4"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "4996:7:4"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_bool",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "4968:5:4",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "4978:7:4",
                "type": ""
              }
            ],
            "src": "4944:90:4"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5080:76:4",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "5134:16:4",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "5143:1:4",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "5146:1:4",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "5136:6:4"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "5136:12:4"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "5136:12:4"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "5103:5:4"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "5125:5:4"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_bool",
                              "nodeType": "YulIdentifier",
                              "src": "5110:14:4"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "5110:21:4"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "5100:2:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5100:32:4"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "5093:6:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5093:40:4"
                  },
                  "nodeType": "YulIf",
                  "src": "5090:60:4"
                }
              ]
            },
            "name": "validator_revert_t_bool",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "5073:5:4",
                "type": ""
              }
            ],
            "src": "5040:116:4"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5222:77:4",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "5232:22:4",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "5247:6:4"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "5241:5:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5241:13:4"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "5232:5:4"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "5287:5:4"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_bool",
                      "nodeType": "YulIdentifier",
                      "src": "5263:23:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5263:30:4"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5263:30:4"
                }
              ]
            },
            "name": "abi_decode_t_bool_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "5200:6:4",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "5208:3:4",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "5216:5:4",
                "type": ""
              }
            ],
            "src": "5162:137:4"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5379:271:4",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "5425:83:4",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                            "nodeType": "YulIdentifier",
                            "src": "5427:77:4"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "5427:79:4"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "5427:79:4"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "5400:7:4"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5409:9:4"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "5396:3:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5396:23:4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5421:2:4",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "5392:3:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5392:32:4"
                  },
                  "nodeType": "YulIf",
                  "src": "5389:119:4"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "5518:125:4",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "5533:15:4",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5547:1:4",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "5537:6:4",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "5562:71:4",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "5605:9:4"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "5616:6:4"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "5601:3:4"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "5601:22:4"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "5625:7:4"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_bool_fromMemory",
                          "nodeType": "YulIdentifier",
                          "src": "5572:28:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5572:61:4"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "5562:6:4"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_bool_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "5349:9:4",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "5360:7:4",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "5372:6:4",
                "type": ""
              }
            ],
            "src": "5305:345:4"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5721:53:4",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "5738:3:4"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "5761:5:4"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_bytes32",
                          "nodeType": "YulIdentifier",
                          "src": "5743:17:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5743:24:4"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5731:6:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5731:37:4"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5731:37:4"
                }
              ]
            },
            "name": "abi_encode_t_bytes32_to_t_bytes32_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "5709:5:4",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "5716:3:4",
                "type": ""
              }
            ],
            "src": "5656:118:4"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5878:124:4",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "5888:26:4",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5900:9:4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5911:2:4",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5896:3:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5896:18:4"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "5888:4:4"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "5968:6:4"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5981:9:4"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5992:1:4",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5977:3:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5977:17:4"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_bytes32_to_t_bytes32_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "5924:43:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5924:71:4"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5924:71:4"
                }
              ]
            },
            "name": "abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "5850:9:4",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "5862:6:4",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "5873:4:4",
                "type": ""
              }
            ],
            "src": "5780:222:4"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6134:206:4",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "6144:26:4",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6156:9:4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6167:2:4",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "6152:3:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6152:18:4"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "6144:4:4"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "6224:6:4"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6237:9:4"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6248:1:4",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6233:3:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6233:17:4"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_bytes32_to_t_bytes32_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "6180:43:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6180:71:4"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6180:71:4"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "6305:6:4"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6318:9:4"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6329:2:4",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6314:3:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6314:18:4"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "6261:43:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6261:72:4"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6261:72:4"
                }
              ]
            },
            "name": "abi_encode_tuple_t_bytes32_t_address__to_t_bytes32_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "6098:9:4",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "6110:6:4",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "6118:6:4",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "6129:4:4",
                "type": ""
              }
            ],
            "src": "6008:332:4"
          }
        ]
      },
      "contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_bytes32(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_bytes32(value) {\n        if iszero(eq(value, cleanup_t_bytes32(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bytes32(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bytes32(value)\n    }\n\n    function abi_decode_tuple_t_bytes32(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes32(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint256_t_address_t_address__to_t_uint256_t_uint256_t_address_t_address__fromStack_reversed(headStart , value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 128)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_address_to_t_address_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_address_to_t_address_fromStack(value3,  add(headStart, 96))\n\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_bytes32t_uint256t_addresst_address(headStart, dataEnd) -> value0, value1, value2, value3 {\n        if slt(sub(dataEnd, headStart), 128) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes32(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value3 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x21() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x21)\n        revert(0, 0x24)\n    }\n\n    function abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_bytes32_to_t_bytes32_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bytes32(value))\n    }\n\n    function abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_bytes32_t_address__to_t_bytes32_t_address__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n    }\n\n}\n",
      "id": 4,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "sourceMap": "50:2542:3:-:0;;;;;;;;;;;;;;;;;;;",
  "deployedSourceMap": "50:2542:3:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2319:271;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;1229:701;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;726:499;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1934:381;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2319:271;2372:13;2387:18;2407:19;2428:28;2464:16;2483:5;:14;2489:7;2483:14;;;;;;;;;;;2464:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2512:4;:10;;;2524:4;:15;;;2541:4;:16;;;2559:4;:25;;;2503:82;;;;;;;;;2319:271;;;;;:::o;1229:701::-;1282:7;698:11;675:34;;;;;;;;:::i;:::-;;:10;:19;686:7;675:19;;;;;;;;;;;;;;;;;;;;;:34;;;;;;;;:::i;:::-;;;666:44;;;;;;1320:16:::1;1339:5:::0;:14:::1;1345:7;1339:14;;;;;;;;;;;1320:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;1381:13;1359:10;:19;1370:7;1359:19;;;;;;;;;;;;:35;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;1474:19;1502:4;:25;;;1474:54;;1561:13;:23;;;1585:4;:16;;;1611:4;1561:56;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1542:4;:15;;;:75;;1534:84;;;::::0;::::1;;1632:13;:26;;;1659:4;:16;;;1677:4;:14;;;1693:4;:15;;;1632:77;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1624:86;;;::::0;::::1;;1787:34;1832:4;:16;;;1787:62;;1855:18;:27;;:39;1883:4;:10;;;1855:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;1911:14;1917:7;1911:14;;;;;;:::i;:::-;;;;;;;;1291:639;;;1229:701:::0;;:::o;726:499::-;855:7;589:14;566:37;;;;;;;;:::i;:::-;;:10;:19;577:7;566:19;;;;;;;;;;;;;;;;;;;;;:37;;;;;;;;:::i;:::-;;;557:47;;;;;;916:16:::1;935:180;;;;;;;;955:9;935:180;;;;983:10;935:180;;;;;;1013:11;935:180;;;;1045:12;935:180;;;;;;1087:21;935:180;;;;::::0;916:199:::1;;1138:4;1121:5;:14:::0;1127:7:::1;1121:14;;;;;;;;;;;:21;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1170:11;1148:10:::0;:19:::1;1159:7;1148:19;;;;;;;;;;;;:33;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;1193:27;1198:7;1207:12;1193:27;;;;;;;:::i;:::-;;;;;;;;872:353;726:499:::0;;;;;:::o;1934:381::-;1988:7;698:11;675:34;;;;;;;;:::i;:::-;;:10;:19;686:7;675:19;;;;;;;;;;;;;;;;;;;;;:34;;;;;;;;:::i;:::-;;;666:44;;;;;;2027:16:::1;2046:5:::0;:14:::1;2052:7;2046:14;;;;;;;;;;;2027:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;2088:14;2066:10;:19;2077:7;2066:19;;;;;;;;;;;;:36;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;2183:32;2226:4;:14;;;2183:58;;2247:16;:25;;:37;2273:4;:10;;;2247:37;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;2295:15;2302:7;2295:15;;;;;;:::i;:::-;;;;;;;;1997:318;;1934:381:::0;;:::o;88:117:4:-;197:1;194;187:12;334:77;371:7;400:5;389:16;;334:77;;;:::o;417:122::-;490:24;508:5;490:24;:::i;:::-;483:5;480:35;470:63;;529:1;526;519:12;470:63;417:122;:::o;545:139::-;591:5;629:6;616:20;607:29;;645:33;672:5;645:33;:::i;:::-;545:139;;;;:::o;690:329::-;749:6;798:2;786:9;777:7;773:23;769:32;766:119;;;804:79;;:::i;:::-;766:119;924:1;949:53;994:7;985:6;974:9;970:22;949:53;:::i;:::-;939:63;;895:117;690:329;;;;:::o;1025:77::-;1062:7;1091:5;1080:16;;1025:77;;;:::o;1108:118::-;1195:24;1213:5;1195:24;:::i;:::-;1190:3;1183:37;1108:118;;:::o;1232:126::-;1269:7;1309:42;1302:5;1298:54;1287:65;;1232:126;;;:::o;1364:96::-;1401:7;1430:24;1448:5;1430:24;:::i;:::-;1419:35;;1364:96;;;:::o;1466:118::-;1553:24;1571:5;1553:24;:::i;:::-;1548:3;1541:37;1466:118;;:::o;1590:553::-;1767:4;1805:3;1794:9;1790:19;1782:27;;1819:71;1887:1;1876:9;1872:17;1863:6;1819:71;:::i;:::-;1900:72;1968:2;1957:9;1953:18;1944:6;1900:72;:::i;:::-;1982;2050:2;2039:9;2035:18;2026:6;1982:72;:::i;:::-;2064;2132:2;2121:9;2117:18;2108:6;2064:72;:::i;:::-;1590:553;;;;;;;:::o;2149:122::-;2222:24;2240:5;2222:24;:::i;:::-;2215:5;2212:35;2202:63;;2261:1;2258;2251:12;2202:63;2149:122;:::o;2277:139::-;2323:5;2361:6;2348:20;2339:29;;2377:33;2404:5;2377:33;:::i;:::-;2277:139;;;;:::o;2422:122::-;2495:24;2513:5;2495:24;:::i;:::-;2488:5;2485:35;2475:63;;2534:1;2531;2524:12;2475:63;2422:122;:::o;2550:139::-;2596:5;2634:6;2621:20;2612:29;;2650:33;2677:5;2650:33;:::i;:::-;2550:139;;;;:::o;2695:765::-;2781:6;2789;2797;2805;2854:3;2842:9;2833:7;2829:23;2825:33;2822:120;;;2861:79;;:::i;:::-;2822:120;2981:1;3006:53;3051:7;3042:6;3031:9;3027:22;3006:53;:::i;:::-;2996:63;;2952:117;3108:2;3134:53;3179:7;3170:6;3159:9;3155:22;3134:53;:::i;:::-;3124:63;;3079:118;3236:2;3262:53;3307:7;3298:6;3287:9;3283:22;3262:53;:::i;:::-;3252:63;;3207:118;3364:2;3390:53;3435:7;3426:6;3415:9;3411:22;3390:53;:::i;:::-;3380:63;;3335:118;2695:765;;;;;;;:::o;3466:180::-;3514:77;3511:1;3504:88;3611:4;3608:1;3601:15;3635:4;3632:1;3625:15;3652:332;3773:4;3811:2;3800:9;3796:18;3788:26;;3824:71;3892:1;3881:9;3877:17;3868:6;3824:71;:::i;:::-;3905:72;3973:2;3962:9;3958:18;3949:6;3905:72;:::i;:::-;3652:332;;;;;:::o;3990:143::-;4047:5;4078:6;4072:13;4063:22;;4094:33;4121:5;4094:33;:::i;:::-;3990:143;;;;:::o;4139:351::-;4209:6;4258:2;4246:9;4237:7;4233:23;4229:32;4226:119;;;4264:79;;:::i;:::-;4226:119;4384:1;4409:64;4465:7;4456:6;4445:9;4441:22;4409:64;:::i;:::-;4399:74;;4355:128;4139:351;;;;:::o;4496:442::-;4645:4;4683:2;4672:9;4668:18;4660:26;;4696:71;4764:1;4753:9;4749:17;4740:6;4696:71;:::i;:::-;4777:72;4845:2;4834:9;4830:18;4821:6;4777:72;:::i;:::-;4859;4927:2;4916:9;4912:18;4903:6;4859:72;:::i;:::-;4496:442;;;;;;:::o;4944:90::-;4978:7;5021:5;5014:13;5007:21;4996:32;;4944:90;;;:::o;5040:116::-;5110:21;5125:5;5110:21;:::i;:::-;5103:5;5100:32;5090:60;;5146:1;5143;5136:12;5090:60;5040:116;:::o;5162:137::-;5216:5;5247:6;5241:13;5232:22;;5263:30;5287:5;5263:30;:::i;:::-;5162:137;;;;:::o;5305:345::-;5372:6;5421:2;5409:9;5400:7;5396:23;5392:32;5389:119;;;5427:79;;:::i;:::-;5389:119;5547:1;5572:61;5625:7;5616:6;5605:9;5601:22;5572:61;:::i;:::-;5562:71;;5518:125;5305:345;;;;:::o;5656:118::-;5743:24;5761:5;5743:24;:::i;:::-;5738:3;5731:37;5656:118;;:::o;5780:222::-;5873:4;5911:2;5900:9;5896:18;5888:26;;5924:71;5992:1;5981:9;5977:17;5968:6;5924:71;:::i;:::-;5780:222;;;;:::o;6008:332::-;6129:4;6167:2;6156:9;6152:18;6144:26;;6180:71;6248:1;6237:9;6233:17;6224:6;6180:71;:::i;:::-;6261:72;6329:2;6318:9;6314:18;6305:6;6261:72;:::i;:::-;6008:332;;;;;:::o",
  "source": "\npragma solidity ^0.8.18;\n\nimport \"./ERC20.sol\";\n\ncontract SwapEtherToERC20 {\n\n  struct Swap {\n    uint256 value;\n    address ethTrader;\n    uint256 erc20Value;\n    address erc20Trader;\n    address erc20ContractAddress;\n  }\n\n  enum States {\n    INVALID,\n    OPEN,\n    CLOSED,\n    EXPIRED\n  }\n\n  mapping (bytes32 => Swap) private swaps;\n  mapping (bytes32 => States) private swapStates;\n\n  event Open(bytes32 _swapID, address _closeTrader);\n  event Expire(bytes32 _swapID);\n  event Close(bytes32 _swapID);\n\n  modifier onlyInvalidSwaps(bytes32 _swapID) {\n    require (swapStates[_swapID] == States.INVALID);\n    _;\n  }\n\n  modifier onlyOpenSwaps(bytes32 _swapID) {\n    require (swapStates[_swapID] == States.OPEN);\n    _;\n  }\n\n  function open(bytes32 _swapID, uint256 _erc20Value, address _erc20Trader, address _erc20ContractAddress) public onlyInvalidSwaps(_swapID) payable {\n    // Store the details of the swap.\n    Swap memory swap = Swap({\n      value: msg.value,\n      ethTrader: msg.sender,\n      erc20Value: _erc20Value,\n      erc20Trader: _erc20Trader,\n      erc20ContractAddress: _erc20ContractAddress\n    });\n    swaps[_swapID] = swap;\n    swapStates[_swapID] = States.OPEN;\n\n    emit Open(_swapID, _erc20Trader);\n  }\n\n  function close(bytes32 _swapID) public onlyOpenSwaps(_swapID) {\n    // Close the swap.\n    Swap memory swap = swaps[_swapID];\n    swapStates[_swapID] = States.CLOSED;\n\n    // Transfer the ERC20 funds from the ERC20 trader to the ETH trader.\n    ERC20 erc20Contract = ERC20(swap.erc20ContractAddress);\n    require(swap.erc20Value <= erc20Contract.allowance(swap.erc20Trader, address(this)));\n    require(erc20Contract.transferFrom(swap.erc20Trader, swap.ethTrader, swap.erc20Value));\n\n    // Transfer the ETH funds from this contract to the ERC20 trader.\n    address payable erc20TraderPayable = payable(swap.erc20Trader);\n    erc20TraderPayable.transfer(swap.value);\n\n    \n    emit Close(_swapID);\n  }\n\n  function expire(bytes32 _swapID) public onlyOpenSwaps(_swapID) {\n    // Expire the swap.\n    Swap memory swap = swaps[_swapID];\n    swapStates[_swapID] = States.EXPIRED;\n\n    // Transfer the ETH value from this contract back to the ETH trader.\n\n    address payable ethTraderPayable = payable(swap.ethTrader);\n    ethTraderPayable.transfer(swap.value);\n    emit Expire(_swapID);\n  }\n\n  function check(bytes32 _swapID) public view returns (uint256 value, uint256 erc20Value, address erc20Trader, address erc20ContractAddress) {\n    Swap memory swap = swaps[_swapID];\n    return  (swap.value, swap.erc20Value, swap.erc20Trader, swap.erc20ContractAddress);\n  }\n}\n",
  "sourcePath": "/Users/wasim/29march2/SwapTokens/AtomicSwaps/contracts/SwapEtherToERC20.sol",
  "ast": {
    "absolutePath": "project:/contracts/SwapEtherToERC20.sol",
    "exportedSymbols": {
      "ERC20": [
        65
      ],
      "SwapEtherToERC20": [
        988
      ]
    },
    "id": 989,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 720,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".18"
        ],
        "nodeType": "PragmaDirective",
        "src": "1:24:3"
      },
      {
        "absolutePath": "project:/contracts/ERC20.sol",
        "file": "./ERC20.sol",
        "id": 721,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 989,
        "sourceUnit": 66,
        "src": "27:21:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "SwapEtherToERC20",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 988,
        "linearizedBaseContracts": [
          988
        ],
        "name": "SwapEtherToERC20",
        "nameLocation": "59:16:3",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "canonicalName": "SwapEtherToERC20.Swap",
            "id": 732,
            "members": [
              {
                "constant": false,
                "id": 723,
                "mutability": "mutable",
                "name": "value",
                "nameLocation": "107:5:3",
                "nodeType": "VariableDeclaration",
                "scope": 732,
                "src": "99:13:3",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 722,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "99:7:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 725,
                "mutability": "mutable",
                "name": "ethTrader",
                "nameLocation": "126:9:3",
                "nodeType": "VariableDeclaration",
                "scope": 732,
                "src": "118:17:3",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 724,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "118:7:3",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 727,
                "mutability": "mutable",
                "name": "erc20Value",
                "nameLocation": "149:10:3",
                "nodeType": "VariableDeclaration",
                "scope": 732,
                "src": "141:18:3",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 726,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "141:7:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 729,
                "mutability": "mutable",
                "name": "erc20Trader",
                "nameLocation": "173:11:3",
                "nodeType": "VariableDeclaration",
                "scope": 732,
                "src": "165:19:3",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 728,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "165:7:3",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 731,
                "mutability": "mutable",
                "name": "erc20ContractAddress",
                "nameLocation": "198:20:3",
                "nodeType": "VariableDeclaration",
                "scope": 732,
                "src": "190:28:3",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 730,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "190:7:3",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "Swap",
            "nameLocation": "88:4:3",
            "nodeType": "StructDefinition",
            "scope": 988,
            "src": "81:142:3",
            "visibility": "public"
          },
          {
            "canonicalName": "SwapEtherToERC20.States",
            "id": 737,
            "members": [
              {
                "id": 733,
                "name": "INVALID",
                "nameLocation": "245:7:3",
                "nodeType": "EnumValue",
                "src": "245:7:3"
              },
              {
                "id": 734,
                "name": "OPEN",
                "nameLocation": "258:4:3",
                "nodeType": "EnumValue",
                "src": "258:4:3"
              },
              {
                "id": 735,
                "name": "CLOSED",
                "nameLocation": "268:6:3",
                "nodeType": "EnumValue",
                "src": "268:6:3"
              },
              {
                "id": 736,
                "name": "EXPIRED",
                "nameLocation": "280:7:3",
                "nodeType": "EnumValue",
                "src": "280:7:3"
              }
            ],
            "name": "States",
            "nameLocation": "232:6:3",
            "nodeType": "EnumDefinition",
            "src": "227:64:3"
          },
          {
            "constant": false,
            "id": 742,
            "mutability": "mutable",
            "name": "swaps",
            "nameLocation": "329:5:3",
            "nodeType": "VariableDeclaration",
            "scope": 988,
            "src": "295:39:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Swap_$732_storage_$",
              "typeString": "mapping(bytes32 => struct SwapEtherToERC20.Swap)"
            },
            "typeName": {
              "id": 741,
              "keyName": "",
              "keyNameLocation": "-1:-1:-1",
              "keyType": {
                "id": 738,
                "name": "bytes32",
                "nodeType": "ElementaryTypeName",
                "src": "304:7:3",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                }
              },
              "nodeType": "Mapping",
              "src": "295:25:3",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Swap_$732_storage_$",
                "typeString": "mapping(bytes32 => struct SwapEtherToERC20.Swap)"
              },
              "valueName": "",
              "valueNameLocation": "-1:-1:-1",
              "valueType": {
                "id": 740,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 739,
                  "name": "Swap",
                  "nameLocations": [
                    "315:4:3"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 732,
                  "src": "315:4:3"
                },
                "referencedDeclaration": 732,
                "src": "315:4:3",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Swap_$732_storage_ptr",
                  "typeString": "struct SwapEtherToERC20.Swap"
                }
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 747,
            "mutability": "mutable",
            "name": "swapStates",
            "nameLocation": "374:10:3",
            "nodeType": "VariableDeclaration",
            "scope": 988,
            "src": "338:46:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_bytes32_$_t_enum$_States_$737_$",
              "typeString": "mapping(bytes32 => enum SwapEtherToERC20.States)"
            },
            "typeName": {
              "id": 746,
              "keyName": "",
              "keyNameLocation": "-1:-1:-1",
              "keyType": {
                "id": 743,
                "name": "bytes32",
                "nodeType": "ElementaryTypeName",
                "src": "347:7:3",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                }
              },
              "nodeType": "Mapping",
              "src": "338:27:3",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_bytes32_$_t_enum$_States_$737_$",
                "typeString": "mapping(bytes32 => enum SwapEtherToERC20.States)"
              },
              "valueName": "",
              "valueNameLocation": "-1:-1:-1",
              "valueType": {
                "id": 745,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 744,
                  "name": "States",
                  "nameLocations": [
                    "358:6:3"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 737,
                  "src": "358:6:3"
                },
                "referencedDeclaration": 737,
                "src": "358:6:3",
                "typeDescriptions": {
                  "typeIdentifier": "t_enum$_States_$737",
                  "typeString": "enum SwapEtherToERC20.States"
                }
              }
            },
            "visibility": "private"
          },
          {
            "anonymous": false,
            "eventSelector": "b5894ff5a344c5160302de0b2027c5b55f4914e9d8e8c11b377b559e5ec789eb",
            "id": 753,
            "name": "Open",
            "nameLocation": "395:4:3",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 752,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 749,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "_swapID",
                  "nameLocation": "408:7:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 753,
                  "src": "400:15:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 748,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "400:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 751,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "_closeTrader",
                  "nameLocation": "425:12:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 753,
                  "src": "417:20:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 750,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "417:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "399:39:3"
            },
            "src": "389:50:3"
          },
          {
            "anonymous": false,
            "eventSelector": "bddd9b693ea862fad6ecf78fd51c065be26fda94d1f3cad3a7d691453a38a735",
            "id": 757,
            "name": "Expire",
            "nameLocation": "448:6:3",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 756,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 755,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "_swapID",
                  "nameLocation": "463:7:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 757,
                  "src": "455:15:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 754,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "455:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "454:17:3"
            },
            "src": "442:30:3"
          },
          {
            "anonymous": false,
            "eventSelector": "c9d8209586aca26a4f59cc70108e4cf2f637da8cb4133c78a3946bc50581ea28",
            "id": 761,
            "name": "Close",
            "nameLocation": "481:5:3",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 760,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 759,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "_swapID",
                  "nameLocation": "495:7:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 761,
                  "src": "487:15:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 758,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "487:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "486:17:3"
            },
            "src": "475:29:3"
          },
          {
            "body": {
              "id": 775,
              "nodeType": "Block",
              "src": "551:65:3",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_enum$_States_$737",
                          "typeString": "enum SwapEtherToERC20.States"
                        },
                        "id": 771,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "baseExpression": {
                            "id": 766,
                            "name": "swapStates",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 747,
                            "src": "566:10:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_bytes32_$_t_enum$_States_$737_$",
                              "typeString": "mapping(bytes32 => enum SwapEtherToERC20.States)"
                            }
                          },
                          "id": 768,
                          "indexExpression": {
                            "id": 767,
                            "name": "_swapID",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 763,
                            "src": "577:7:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "566:19:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_States_$737",
                            "typeString": "enum SwapEtherToERC20.States"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "id": 769,
                            "name": "States",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 737,
                            "src": "589:6:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_enum$_States_$737_$",
                              "typeString": "type(enum SwapEtherToERC20.States)"
                            }
                          },
                          "id": 770,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberLocation": "596:7:3",
                          "memberName": "INVALID",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 733,
                          "src": "589:14:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_States_$737",
                            "typeString": "enum SwapEtherToERC20.States"
                          }
                        },
                        "src": "566:37:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 765,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "557:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 772,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "557:47:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 773,
                  "nodeType": "ExpressionStatement",
                  "src": "557:47:3"
                },
                {
                  "id": 774,
                  "nodeType": "PlaceholderStatement",
                  "src": "610:1:3"
                }
              ]
            },
            "id": 776,
            "name": "onlyInvalidSwaps",
            "nameLocation": "517:16:3",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 764,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 763,
                  "mutability": "mutable",
                  "name": "_swapID",
                  "nameLocation": "542:7:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 776,
                  "src": "534:15:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 762,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "534:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "533:17:3"
            },
            "src": "508:108:3",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 790,
              "nodeType": "Block",
              "src": "660:62:3",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_enum$_States_$737",
                          "typeString": "enum SwapEtherToERC20.States"
                        },
                        "id": 786,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "baseExpression": {
                            "id": 781,
                            "name": "swapStates",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 747,
                            "src": "675:10:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_bytes32_$_t_enum$_States_$737_$",
                              "typeString": "mapping(bytes32 => enum SwapEtherToERC20.States)"
                            }
                          },
                          "id": 783,
                          "indexExpression": {
                            "id": 782,
                            "name": "_swapID",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 778,
                            "src": "686:7:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "675:19:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_States_$737",
                            "typeString": "enum SwapEtherToERC20.States"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "id": 784,
                            "name": "States",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 737,
                            "src": "698:6:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_enum$_States_$737_$",
                              "typeString": "type(enum SwapEtherToERC20.States)"
                            }
                          },
                          "id": 785,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberLocation": "705:4:3",
                          "memberName": "OPEN",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 734,
                          "src": "698:11:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_States_$737",
                            "typeString": "enum SwapEtherToERC20.States"
                          }
                        },
                        "src": "675:34:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 780,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "666:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 787,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "666:44:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 788,
                  "nodeType": "ExpressionStatement",
                  "src": "666:44:3"
                },
                {
                  "id": 789,
                  "nodeType": "PlaceholderStatement",
                  "src": "716:1:3"
                }
              ]
            },
            "id": 791,
            "name": "onlyOpenSwaps",
            "nameLocation": "629:13:3",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 779,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 778,
                  "mutability": "mutable",
                  "name": "_swapID",
                  "nameLocation": "651:7:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 791,
                  "src": "643:15:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 777,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "643:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "642:17:3"
            },
            "src": "620:102:3",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 836,
              "nodeType": "Block",
              "src": "872:353:3",
              "statements": [
                {
                  "assignments": [
                    807
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 807,
                      "mutability": "mutable",
                      "name": "swap",
                      "nameLocation": "928:4:3",
                      "nodeType": "VariableDeclaration",
                      "scope": 836,
                      "src": "916:16:3",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Swap_$732_memory_ptr",
                        "typeString": "struct SwapEtherToERC20.Swap"
                      },
                      "typeName": {
                        "id": 806,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 805,
                          "name": "Swap",
                          "nameLocations": [
                            "916:4:3"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 732,
                          "src": "916:4:3"
                        },
                        "referencedDeclaration": 732,
                        "src": "916:4:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Swap_$732_storage_ptr",
                          "typeString": "struct SwapEtherToERC20.Swap"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 817,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 809,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "955:3:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 810,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "959:5:3",
                        "memberName": "value",
                        "nodeType": "MemberAccess",
                        "src": "955:9:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "id": 811,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "983:3:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 812,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "987:6:3",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "983:10:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 813,
                        "name": "_erc20Value",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 795,
                        "src": "1013:11:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 814,
                        "name": "_erc20Trader",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 797,
                        "src": "1045:12:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 815,
                        "name": "_erc20ContractAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 799,
                        "src": "1087:21:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 808,
                      "name": "Swap",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 732,
                      "src": "935:4:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_struct$_Swap_$732_storage_ptr_$",
                        "typeString": "type(struct SwapEtherToERC20.Swap storage pointer)"
                      }
                    },
                    "id": 816,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "structConstructorCall",
                    "lValueRequested": false,
                    "nameLocations": [
                      "948:5:3",
                      "972:9:3",
                      "1001:10:3",
                      "1032:11:3",
                      "1065:20:3"
                    ],
                    "names": [
                      "value",
                      "ethTrader",
                      "erc20Value",
                      "erc20Trader",
                      "erc20ContractAddress"
                    ],
                    "nodeType": "FunctionCall",
                    "src": "935:180:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Swap_$732_memory_ptr",
                      "typeString": "struct SwapEtherToERC20.Swap memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "916:199:3"
                },
                {
                  "expression": {
                    "id": 822,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 818,
                        "name": "swaps",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 742,
                        "src": "1121:5:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Swap_$732_storage_$",
                          "typeString": "mapping(bytes32 => struct SwapEtherToERC20.Swap storage ref)"
                        }
                      },
                      "id": 820,
                      "indexExpression": {
                        "id": 819,
                        "name": "_swapID",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 793,
                        "src": "1127:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1121:14:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Swap_$732_storage",
                        "typeString": "struct SwapEtherToERC20.Swap storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 821,
                      "name": "swap",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 807,
                      "src": "1138:4:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Swap_$732_memory_ptr",
                        "typeString": "struct SwapEtherToERC20.Swap memory"
                      }
                    },
                    "src": "1121:21:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Swap_$732_storage",
                      "typeString": "struct SwapEtherToERC20.Swap storage ref"
                    }
                  },
                  "id": 823,
                  "nodeType": "ExpressionStatement",
                  "src": "1121:21:3"
                },
                {
                  "expression": {
                    "id": 829,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 824,
                        "name": "swapStates",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 747,
                        "src": "1148:10:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_bytes32_$_t_enum$_States_$737_$",
                          "typeString": "mapping(bytes32 => enum SwapEtherToERC20.States)"
                        }
                      },
                      "id": 826,
                      "indexExpression": {
                        "id": 825,
                        "name": "_swapID",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 793,
                        "src": "1159:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1148:19:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_States_$737",
                        "typeString": "enum SwapEtherToERC20.States"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 827,
                        "name": "States",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 737,
                        "src": "1170:6:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_States_$737_$",
                          "typeString": "type(enum SwapEtherToERC20.States)"
                        }
                      },
                      "id": 828,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberLocation": "1177:4:3",
                      "memberName": "OPEN",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 734,
                      "src": "1170:11:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_States_$737",
                        "typeString": "enum SwapEtherToERC20.States"
                      }
                    },
                    "src": "1148:33:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_States_$737",
                      "typeString": "enum SwapEtherToERC20.States"
                    }
                  },
                  "id": 830,
                  "nodeType": "ExpressionStatement",
                  "src": "1148:33:3"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 832,
                        "name": "_swapID",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 793,
                        "src": "1198:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 833,
                        "name": "_erc20Trader",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 797,
                        "src": "1207:12:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 831,
                      "name": "Open",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 753,
                      "src": "1193:4:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_address_$returns$__$",
                        "typeString": "function (bytes32,address)"
                      }
                    },
                    "id": 834,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1193:27:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 835,
                  "nodeType": "EmitStatement",
                  "src": "1188:32:3"
                }
              ]
            },
            "functionSelector": "6e792315",
            "id": 837,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 802,
                    "name": "_swapID",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 793,
                    "src": "855:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  }
                ],
                "id": 803,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 801,
                  "name": "onlyInvalidSwaps",
                  "nameLocations": [
                    "838:16:3"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 776,
                  "src": "838:16:3"
                },
                "nodeType": "ModifierInvocation",
                "src": "838:25:3"
              }
            ],
            "name": "open",
            "nameLocation": "735:4:3",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 800,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 793,
                  "mutability": "mutable",
                  "name": "_swapID",
                  "nameLocation": "748:7:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 837,
                  "src": "740:15:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 792,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "740:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 795,
                  "mutability": "mutable",
                  "name": "_erc20Value",
                  "nameLocation": "765:11:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 837,
                  "src": "757:19:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 794,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "757:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 797,
                  "mutability": "mutable",
                  "name": "_erc20Trader",
                  "nameLocation": "786:12:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 837,
                  "src": "778:20:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 796,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "778:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 799,
                  "mutability": "mutable",
                  "name": "_erc20ContractAddress",
                  "nameLocation": "808:21:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 837,
                  "src": "800:29:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 798,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "800:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "739:91:3"
            },
            "returnParameters": {
              "id": 804,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "872:0:3"
            },
            "scope": 988,
            "src": "726:499:3",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 913,
              "nodeType": "Block",
              "src": "1291:639:3",
              "statements": [
                {
                  "assignments": [
                    847
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 847,
                      "mutability": "mutable",
                      "name": "swap",
                      "nameLocation": "1332:4:3",
                      "nodeType": "VariableDeclaration",
                      "scope": 913,
                      "src": "1320:16:3",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Swap_$732_memory_ptr",
                        "typeString": "struct SwapEtherToERC20.Swap"
                      },
                      "typeName": {
                        "id": 846,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 845,
                          "name": "Swap",
                          "nameLocations": [
                            "1320:4:3"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 732,
                          "src": "1320:4:3"
                        },
                        "referencedDeclaration": 732,
                        "src": "1320:4:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Swap_$732_storage_ptr",
                          "typeString": "struct SwapEtherToERC20.Swap"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 851,
                  "initialValue": {
                    "baseExpression": {
                      "id": 848,
                      "name": "swaps",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 742,
                      "src": "1339:5:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Swap_$732_storage_$",
                        "typeString": "mapping(bytes32 => struct SwapEtherToERC20.Swap storage ref)"
                      }
                    },
                    "id": 850,
                    "indexExpression": {
                      "id": 849,
                      "name": "_swapID",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 839,
                      "src": "1345:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "1339:14:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Swap_$732_storage",
                      "typeString": "struct SwapEtherToERC20.Swap storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1320:33:3"
                },
                {
                  "expression": {
                    "id": 857,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 852,
                        "name": "swapStates",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 747,
                        "src": "1359:10:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_bytes32_$_t_enum$_States_$737_$",
                          "typeString": "mapping(bytes32 => enum SwapEtherToERC20.States)"
                        }
                      },
                      "id": 854,
                      "indexExpression": {
                        "id": 853,
                        "name": "_swapID",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 839,
                        "src": "1370:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1359:19:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_States_$737",
                        "typeString": "enum SwapEtherToERC20.States"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 855,
                        "name": "States",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 737,
                        "src": "1381:6:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_States_$737_$",
                          "typeString": "type(enum SwapEtherToERC20.States)"
                        }
                      },
                      "id": 856,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberLocation": "1388:6:3",
                      "memberName": "CLOSED",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 735,
                      "src": "1381:13:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_States_$737",
                        "typeString": "enum SwapEtherToERC20.States"
                      }
                    },
                    "src": "1359:35:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_States_$737",
                      "typeString": "enum SwapEtherToERC20.States"
                    }
                  },
                  "id": 858,
                  "nodeType": "ExpressionStatement",
                  "src": "1359:35:3"
                },
                {
                  "assignments": [
                    861
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 861,
                      "mutability": "mutable",
                      "name": "erc20Contract",
                      "nameLocation": "1480:13:3",
                      "nodeType": "VariableDeclaration",
                      "scope": 913,
                      "src": "1474:19:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ERC20_$65",
                        "typeString": "contract ERC20"
                      },
                      "typeName": {
                        "id": 860,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 859,
                          "name": "ERC20",
                          "nameLocations": [
                            "1474:5:3"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 65,
                          "src": "1474:5:3"
                        },
                        "referencedDeclaration": 65,
                        "src": "1474:5:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$65",
                          "typeString": "contract ERC20"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 866,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 863,
                          "name": "swap",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 847,
                          "src": "1502:4:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Swap_$732_memory_ptr",
                            "typeString": "struct SwapEtherToERC20.Swap memory"
                          }
                        },
                        "id": 864,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "1507:20:3",
                        "memberName": "erc20ContractAddress",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 731,
                        "src": "1502:25:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 862,
                      "name": "ERC20",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 65,
                      "src": "1496:5:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_ERC20_$65_$",
                        "typeString": "type(contract ERC20)"
                      }
                    },
                    "id": 865,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1496:32:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC20_$65",
                      "typeString": "contract ERC20"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1474:54:3"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 879,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 868,
                            "name": "swap",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 847,
                            "src": "1542:4:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Swap_$732_memory_ptr",
                              "typeString": "struct SwapEtherToERC20.Swap memory"
                            }
                          },
                          "id": 869,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "1547:10:3",
                          "memberName": "erc20Value",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 727,
                          "src": "1542:15:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 872,
                                "name": "swap",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 847,
                                "src": "1585:4:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Swap_$732_memory_ptr",
                                  "typeString": "struct SwapEtherToERC20.Swap memory"
                                }
                              },
                              "id": 873,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "1590:11:3",
                              "memberName": "erc20Trader",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 729,
                              "src": "1585:16:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "id": 876,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4294967268,
                                  "src": "1611:4:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_SwapEtherToERC20_$988",
                                    "typeString": "contract SwapEtherToERC20"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_SwapEtherToERC20_$988",
                                    "typeString": "contract SwapEtherToERC20"
                                  }
                                ],
                                "id": 875,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "1603:7:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 874,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "1603:7:3",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 877,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1603:13:3",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "id": 870,
                              "name": "erc20Contract",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 861,
                              "src": "1561:13:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ERC20_$65",
                                "typeString": "contract ERC20"
                              }
                            },
                            "id": 871,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "1575:9:3",
                            "memberName": "allowance",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 35,
                            "src": "1561:23:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address,address) view external returns (uint256)"
                            }
                          },
                          "id": 878,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1561:56:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "1542:75:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 867,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1534:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 880,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1534:84:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 881,
                  "nodeType": "ExpressionStatement",
                  "src": "1534:84:3"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "expression": {
                              "id": 885,
                              "name": "swap",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 847,
                              "src": "1659:4:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Swap_$732_memory_ptr",
                                "typeString": "struct SwapEtherToERC20.Swap memory"
                              }
                            },
                            "id": 886,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "1664:11:3",
                            "memberName": "erc20Trader",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 729,
                            "src": "1659:16:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "expression": {
                              "id": 887,
                              "name": "swap",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 847,
                              "src": "1677:4:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Swap_$732_memory_ptr",
                                "typeString": "struct SwapEtherToERC20.Swap memory"
                              }
                            },
                            "id": 888,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "1682:9:3",
                            "memberName": "ethTrader",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 725,
                            "src": "1677:14:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "expression": {
                              "id": 889,
                              "name": "swap",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 847,
                              "src": "1693:4:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Swap_$732_memory_ptr",
                                "typeString": "struct SwapEtherToERC20.Swap memory"
                              }
                            },
                            "id": 890,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "1698:10:3",
                            "memberName": "erc20Value",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 727,
                            "src": "1693:15:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "id": 883,
                            "name": "erc20Contract",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 861,
                            "src": "1632:13:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC20_$65",
                              "typeString": "contract ERC20"
                            }
                          },
                          "id": 884,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "1646:12:3",
                          "memberName": "transferFrom",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 55,
                          "src": "1632:26:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (address,address,uint256) external returns (bool)"
                          }
                        },
                        "id": 891,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1632:77:3",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 882,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1624:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 892,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1624:86:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 893,
                  "nodeType": "ExpressionStatement",
                  "src": "1624:86:3"
                },
                {
                  "assignments": [
                    895
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 895,
                      "mutability": "mutable",
                      "name": "erc20TraderPayable",
                      "nameLocation": "1803:18:3",
                      "nodeType": "VariableDeclaration",
                      "scope": 913,
                      "src": "1787:34:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      },
                      "typeName": {
                        "id": 894,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "1787:15:3",
                        "stateMutability": "payable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 901,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 898,
                          "name": "swap",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 847,
                          "src": "1832:4:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Swap_$732_memory_ptr",
                            "typeString": "struct SwapEtherToERC20.Swap memory"
                          }
                        },
                        "id": 899,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "1837:11:3",
                        "memberName": "erc20Trader",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 729,
                        "src": "1832:16:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 897,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "1824:8:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_address_payable_$",
                        "typeString": "type(address payable)"
                      },
                      "typeName": {
                        "id": 896,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "1824:8:3",
                        "stateMutability": "payable",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 900,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1824:25:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1787:62:3"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 905,
                          "name": "swap",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 847,
                          "src": "1883:4:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Swap_$732_memory_ptr",
                            "typeString": "struct SwapEtherToERC20.Swap memory"
                          }
                        },
                        "id": 906,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "1888:5:3",
                        "memberName": "value",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 723,
                        "src": "1883:10:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 902,
                        "name": "erc20TraderPayable",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 895,
                        "src": "1855:18:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "id": 904,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1874:8:3",
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "src": "1855:27:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 907,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1855:39:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 908,
                  "nodeType": "ExpressionStatement",
                  "src": "1855:39:3"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 910,
                        "name": "_swapID",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 839,
                        "src": "1917:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "id": 909,
                      "name": "Close",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 761,
                      "src": "1911:5:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$returns$__$",
                        "typeString": "function (bytes32)"
                      }
                    },
                    "id": 911,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1911:14:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 912,
                  "nodeType": "EmitStatement",
                  "src": "1906:19:3"
                }
              ]
            },
            "functionSelector": "39c79e0c",
            "id": 914,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 842,
                    "name": "_swapID",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 839,
                    "src": "1282:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  }
                ],
                "id": 843,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 841,
                  "name": "onlyOpenSwaps",
                  "nameLocations": [
                    "1268:13:3"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 791,
                  "src": "1268:13:3"
                },
                "nodeType": "ModifierInvocation",
                "src": "1268:22:3"
              }
            ],
            "name": "close",
            "nameLocation": "1238:5:3",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 840,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 839,
                  "mutability": "mutable",
                  "name": "_swapID",
                  "nameLocation": "1252:7:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 914,
                  "src": "1244:15:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 838,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1244:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1243:17:3"
            },
            "returnParameters": {
              "id": 844,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1291:0:3"
            },
            "scope": 988,
            "src": "1229:701:3",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 955,
              "nodeType": "Block",
              "src": "1997:318:3",
              "statements": [
                {
                  "assignments": [
                    924
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 924,
                      "mutability": "mutable",
                      "name": "swap",
                      "nameLocation": "2039:4:3",
                      "nodeType": "VariableDeclaration",
                      "scope": 955,
                      "src": "2027:16:3",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Swap_$732_memory_ptr",
                        "typeString": "struct SwapEtherToERC20.Swap"
                      },
                      "typeName": {
                        "id": 923,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 922,
                          "name": "Swap",
                          "nameLocations": [
                            "2027:4:3"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 732,
                          "src": "2027:4:3"
                        },
                        "referencedDeclaration": 732,
                        "src": "2027:4:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Swap_$732_storage_ptr",
                          "typeString": "struct SwapEtherToERC20.Swap"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 928,
                  "initialValue": {
                    "baseExpression": {
                      "id": 925,
                      "name": "swaps",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 742,
                      "src": "2046:5:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Swap_$732_storage_$",
                        "typeString": "mapping(bytes32 => struct SwapEtherToERC20.Swap storage ref)"
                      }
                    },
                    "id": 927,
                    "indexExpression": {
                      "id": 926,
                      "name": "_swapID",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 916,
                      "src": "2052:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "2046:14:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Swap_$732_storage",
                      "typeString": "struct SwapEtherToERC20.Swap storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2027:33:3"
                },
                {
                  "expression": {
                    "id": 934,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 929,
                        "name": "swapStates",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 747,
                        "src": "2066:10:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_bytes32_$_t_enum$_States_$737_$",
                          "typeString": "mapping(bytes32 => enum SwapEtherToERC20.States)"
                        }
                      },
                      "id": 931,
                      "indexExpression": {
                        "id": 930,
                        "name": "_swapID",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 916,
                        "src": "2077:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2066:19:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_States_$737",
                        "typeString": "enum SwapEtherToERC20.States"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 932,
                        "name": "States",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 737,
                        "src": "2088:6:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_States_$737_$",
                          "typeString": "type(enum SwapEtherToERC20.States)"
                        }
                      },
                      "id": 933,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberLocation": "2095:7:3",
                      "memberName": "EXPIRED",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 736,
                      "src": "2088:14:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_States_$737",
                        "typeString": "enum SwapEtherToERC20.States"
                      }
                    },
                    "src": "2066:36:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_States_$737",
                      "typeString": "enum SwapEtherToERC20.States"
                    }
                  },
                  "id": 935,
                  "nodeType": "ExpressionStatement",
                  "src": "2066:36:3"
                },
                {
                  "assignments": [
                    937
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 937,
                      "mutability": "mutable",
                      "name": "ethTraderPayable",
                      "nameLocation": "2199:16:3",
                      "nodeType": "VariableDeclaration",
                      "scope": 955,
                      "src": "2183:32:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      },
                      "typeName": {
                        "id": 936,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "2183:15:3",
                        "stateMutability": "payable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 943,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 940,
                          "name": "swap",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 924,
                          "src": "2226:4:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Swap_$732_memory_ptr",
                            "typeString": "struct SwapEtherToERC20.Swap memory"
                          }
                        },
                        "id": 941,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "2231:9:3",
                        "memberName": "ethTrader",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 725,
                        "src": "2226:14:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 939,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "2218:8:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_address_payable_$",
                        "typeString": "type(address payable)"
                      },
                      "typeName": {
                        "id": 938,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "2218:8:3",
                        "stateMutability": "payable",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 942,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2218:23:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2183:58:3"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 947,
                          "name": "swap",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 924,
                          "src": "2273:4:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Swap_$732_memory_ptr",
                            "typeString": "struct SwapEtherToERC20.Swap memory"
                          }
                        },
                        "id": 948,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "2278:5:3",
                        "memberName": "value",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 723,
                        "src": "2273:10:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 944,
                        "name": "ethTraderPayable",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 937,
                        "src": "2247:16:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "id": 946,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2264:8:3",
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "src": "2247:25:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 949,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2247:37:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 950,
                  "nodeType": "ExpressionStatement",
                  "src": "2247:37:3"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 952,
                        "name": "_swapID",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 916,
                        "src": "2302:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "id": 951,
                      "name": "Expire",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 757,
                      "src": "2295:6:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$returns$__$",
                        "typeString": "function (bytes32)"
                      }
                    },
                    "id": 953,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2295:15:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 954,
                  "nodeType": "EmitStatement",
                  "src": "2290:20:3"
                }
              ]
            },
            "functionSelector": "c6441798",
            "id": 956,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 919,
                    "name": "_swapID",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 916,
                    "src": "1988:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  }
                ],
                "id": 920,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 918,
                  "name": "onlyOpenSwaps",
                  "nameLocations": [
                    "1974:13:3"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 791,
                  "src": "1974:13:3"
                },
                "nodeType": "ModifierInvocation",
                "src": "1974:22:3"
              }
            ],
            "name": "expire",
            "nameLocation": "1943:6:3",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 917,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 916,
                  "mutability": "mutable",
                  "name": "_swapID",
                  "nameLocation": "1958:7:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 956,
                  "src": "1950:15:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 915,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1950:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1949:17:3"
            },
            "returnParameters": {
              "id": 921,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1997:0:3"
            },
            "scope": 988,
            "src": "1934:381:3",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 986,
              "nodeType": "Block",
              "src": "2458:132:3",
              "statements": [
                {
                  "assignments": [
                    971
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 971,
                      "mutability": "mutable",
                      "name": "swap",
                      "nameLocation": "2476:4:3",
                      "nodeType": "VariableDeclaration",
                      "scope": 986,
                      "src": "2464:16:3",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Swap_$732_memory_ptr",
                        "typeString": "struct SwapEtherToERC20.Swap"
                      },
                      "typeName": {
                        "id": 970,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 969,
                          "name": "Swap",
                          "nameLocations": [
                            "2464:4:3"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 732,
                          "src": "2464:4:3"
                        },
                        "referencedDeclaration": 732,
                        "src": "2464:4:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Swap_$732_storage_ptr",
                          "typeString": "struct SwapEtherToERC20.Swap"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 975,
                  "initialValue": {
                    "baseExpression": {
                      "id": 972,
                      "name": "swaps",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 742,
                      "src": "2483:5:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Swap_$732_storage_$",
                        "typeString": "mapping(bytes32 => struct SwapEtherToERC20.Swap storage ref)"
                      }
                    },
                    "id": 974,
                    "indexExpression": {
                      "id": 973,
                      "name": "_swapID",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 958,
                      "src": "2489:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "2483:14:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Swap_$732_storage",
                      "typeString": "struct SwapEtherToERC20.Swap storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2464:33:3"
                },
                {
                  "expression": {
                    "components": [
                      {
                        "expression": {
                          "id": 976,
                          "name": "swap",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 971,
                          "src": "2512:4:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Swap_$732_memory_ptr",
                            "typeString": "struct SwapEtherToERC20.Swap memory"
                          }
                        },
                        "id": 977,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "2517:5:3",
                        "memberName": "value",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 723,
                        "src": "2512:10:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "id": 978,
                          "name": "swap",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 971,
                          "src": "2524:4:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Swap_$732_memory_ptr",
                            "typeString": "struct SwapEtherToERC20.Swap memory"
                          }
                        },
                        "id": 979,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "2529:10:3",
                        "memberName": "erc20Value",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 727,
                        "src": "2524:15:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "id": 980,
                          "name": "swap",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 971,
                          "src": "2541:4:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Swap_$732_memory_ptr",
                            "typeString": "struct SwapEtherToERC20.Swap memory"
                          }
                        },
                        "id": 981,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "2546:11:3",
                        "memberName": "erc20Trader",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 729,
                        "src": "2541:16:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 982,
                          "name": "swap",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 971,
                          "src": "2559:4:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Swap_$732_memory_ptr",
                            "typeString": "struct SwapEtherToERC20.Swap memory"
                          }
                        },
                        "id": 983,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "2564:20:3",
                        "memberName": "erc20ContractAddress",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 731,
                        "src": "2559:25:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "id": 984,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "2511:74:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$_t_address_$_t_address_$",
                      "typeString": "tuple(uint256,uint256,address,address)"
                    }
                  },
                  "functionReturnParameters": 968,
                  "id": 985,
                  "nodeType": "Return",
                  "src": "2503:82:3"
                }
              ]
            },
            "functionSelector": "399e0792",
            "id": 987,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "check",
            "nameLocation": "2328:5:3",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 959,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 958,
                  "mutability": "mutable",
                  "name": "_swapID",
                  "nameLocation": "2342:7:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 987,
                  "src": "2334:15:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 957,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "2334:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2333:17:3"
            },
            "returnParameters": {
              "id": 968,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 961,
                  "mutability": "mutable",
                  "name": "value",
                  "nameLocation": "2380:5:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 987,
                  "src": "2372:13:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 960,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2372:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 963,
                  "mutability": "mutable",
                  "name": "erc20Value",
                  "nameLocation": "2395:10:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 987,
                  "src": "2387:18:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 962,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2387:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 965,
                  "mutability": "mutable",
                  "name": "erc20Trader",
                  "nameLocation": "2415:11:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 987,
                  "src": "2407:19:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 964,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2407:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 967,
                  "mutability": "mutable",
                  "name": "erc20ContractAddress",
                  "nameLocation": "2436:20:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 987,
                  "src": "2428:28:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 966,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2428:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2371:86:3"
            },
            "scope": 988,
            "src": "2319:271:3",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 989,
        "src": "50:2542:3",
        "usedErrors": []
      }
    ],
    "src": "1:2592:3"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.18+commit.87f61d96.Emscripten.clang"
  },
  "networks": {
    "5777": {
      "events": {},
      "links": {},
      "address": "0x0404cF6D62c43deE68A8CE13faA4565707797C7A",
      "transactionHash": "0x255a1b07021b416103d1792f325def6968cc723e4b9699fe995a7ad387e33026"
    }
  },
  "schemaVersion": "3.4.13",
  "updatedAt": "2023-03-28T13:03:36.602Z",
  "networkType": "ethereum",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}